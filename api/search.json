[{"id":"ce2fec8b4c37214b0a0a286c8164327b","title":"pyecharts柱状图-进阶","content":"封面跟初阶的是兄弟俩，估计很多人没体验过独自一人漫无目的行走几十公里，然后平静地等待日出。关于录制gif:\n电脑如何录制GIF\n我总算知道了为什么有人倾向于拿python做网站。这图像导出来的动画效果真棒！交互感爆炸\n废话不多说，开始正题：\n数据堆叠柱状图from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nl3&#x3D;[300,400,500,400,300,200,100]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2, stack&#x3D;&quot;stack1&quot;)\n    .add_yaxis(&quot;l3&quot;, l3, stack&#x3D;&quot;stack1&quot;)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;数据堆叠&quot;))\n)\nbar.render_notebook()\n效果：\n柱状图和折线图合并import pyecharts.options as opts\nfrom pyecharts.charts import Bar, Line\n\nx_data &#x3D; [&quot;1月&quot;, &quot;2月&quot;, &quot;3月&quot;, &quot;4月&quot;, &quot;5月&quot;, &quot;6月&quot;, &quot;7月&quot;, &quot;8月&quot;, &quot;9月&quot;, &quot;10月&quot;, &quot;11月&quot;, &quot;12月&quot;]\ny_data &#x3D; [2.6,5.9,9.0,26.4,28.7,70.7,175.6,182.2,48.7,18.8,6.0,2.3,]\nbar &#x3D; (\n    Bar(init_opts&#x3D;opts.InitOpts(width&#x3D;&quot;1000px&quot;, height&#x3D;&quot;500px&quot;))\n    .add_xaxis(xaxis_data&#x3D;x_data)\n    .add_yaxis(\n        &quot;降水量&quot;,\n        y_data,\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n    )\n    .set_global_opts(\n        tooltip_opts&#x3D;opts.TooltipOpts(\n            is_show&#x3D;True, trigger&#x3D;&quot;axis&quot;, axis_pointer_type&#x3D;&quot;cross&quot;\n        ),\n        xaxis_opts&#x3D;opts.AxisOpts(\n            type_&#x3D;&quot;category&quot;,\n            axispointer_opts&#x3D;opts.AxisPointerOpts(is_show&#x3D;True, type_&#x3D;&quot;shadow&quot;),\n        ),\n        yaxis_opts&#x3D;opts.AxisOpts(\n            name&#x3D;&quot;水量&quot;,\n            type_&#x3D;&quot;value&quot;,\n            min_&#x3D;0,\n            max_&#x3D;250,\n            interval&#x3D;50,\n            axislabel_opts&#x3D;opts.LabelOpts(formatter&#x3D;&quot;&#123;value&#125; ml&quot;),\n            axistick_opts&#x3D;opts.AxisTickOpts(is_show&#x3D;True),\n            splitline_opts&#x3D;opts.SplitLineOpts(is_show&#x3D;True),\n        ),\n    )\n)\n\nline &#x3D; (\n    Line()\n    .add_xaxis(xaxis_data&#x3D;x_data)\n    .add_yaxis(\n        series_name&#x3D;&quot;降水量&quot;,\n        yaxis_index&#x3D;0,\n        y_axis&#x3D;[2.6,5.9,9.0,26.4,28.7,70.7,175.6,182.2,48.7,18.8,6.0,2.3,],\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n    )\n)\n\nbar.overlap(line).render_notebook()\n效果：yaxis_opts=opts.AxisOpts(）中可以设置纵坐标起止范围和间隔\n双纵坐标柱状图为柱状图添加背景图片为柱状图添加动画","slug":"pyecharts柱状图-进阶","date":"2021-12-14T15:42:19.000Z","categories_index":"Python数据分析","tags_index":"Python,pyechart,柱状图","author_index":"Quanito"},{"id":"bce0f12cb1963ebdb70de9d5d2cd3dd0","title":"pyecharts柱状图-初阶","content":"封面为比亚里茨海边瞭望塔上南方风景。本文为小白准备，老手可以划走。\nPyecharts简介pyecharts主要基于Web浏览器进行显示，绘制的图形比较多，包括折线图、柱状图、饼图、漏斗图 地图和极坐标图等。使用pyecharts绘图代码量很少，但绘制的图形比较美观。\npyecharts 分为 v0.5.X 和 v1 两个大版本，v0.5.X 和 v1 间不兼容，v1 是一个全新的版本 v0.5.X支持 Python2.7，3.4+。\n0.5.x 版本将不再进行维护，v1仅支持 Python3.6+。\n柱状图基于pyecharts v1.9.1 版本进行展示(2021.12月最新版本)\npyecharts柱状图/条形图基本柱状图/条形图from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;基本柱状图&quot;, l2)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Bar-基本示例&quot;, subtitle&#x3D;&quot;我是副标题&quot;))\n)\nbar.render_notebook()\n效果：add_xaxis:添加横坐标，需传入列表 add_yaxis:添加纵坐标，需传入列表，切列表元素为数值\n添加坐标轴名称from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;基本柱状图&quot;, l2)\n    .set_global_opts(\n        title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Bar-基本示例&quot;),\n        yaxis_opts&#x3D;opts.AxisOpts(name&#x3D;&quot;人流量&quot;),\n        xaxis_opts&#x3D;opts.AxisOpts(name&#x3D;&quot;星期&quot;),)\n)\nbar.render_notebook()\n效果：\n多个纵坐标的柱状图/条形图from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nl3&#x3D;[300,400,500,400,300,200,100]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .add_yaxis(&quot;l3&quot;, l3)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Bar-基本示例&quot;, subtitle&#x3D;&quot;我是副标题&quot;),\n                    toolbox_opts&#x3D;opts.BrushOpts(),)\n)\nbar.render_notebook()\n效果：\n设置柱状图间隔和颜色from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;,l2,category_gap&#x3D;0, color&#x3D;&#39;#FFFF00&#39;)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Bar-基本示例&quot;, subtitle&#x3D;&quot;我是副标题&quot;))\n)\nbar.render_notebook()\n效果：category_gap:设置间隔\ncolor：设置柱状图颜色\n横向柱状图from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nl3&#x3D;[300,400,500,400,300,200,100]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .add_yaxis(&quot;l3&quot;, l3)\n    .reversal_axis()\n    .set_series_opts(label_opts&#x3D;opts.LabelOpts(position&#x3D;&quot;right&quot;))\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;横向柱状图&quot;))\n)\nbar.render_notebook()\n效果：reversal_axis将图形反转\nposition=”right”表示将数值在图形右侧显示，同理left、center分别表示左侧和中间\n显示最大值、最小值和平均值标记线from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nimport random\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;标记线柱状图&quot;))\n    .set_series_opts(\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n        markline_opts&#x3D;opts.MarkLineOpts(\n            data&#x3D;[\n                opts.MarkLineItem(type_&#x3D;&quot;min&quot;, name&#x3D;&quot;最小值&quot;),\n                opts.MarkLineItem(type_&#x3D;&quot;max&quot;, name&#x3D;&quot;最大值&quot;),\n                opts.MarkLineItem(type_&#x3D;&quot;average&quot;, name&#x3D;&quot;平均值&quot;),\n            ]\n        ),\n    )\n)\nbar.render_notebook()\n效果：\n标记点from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nimport random\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;标记线柱状图&quot;))\n    .set_series_opts(\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n        markpoint_opts&#x3D;opts.MarkPointOpts(\n            data&#x3D;[\n                opts.MarkPointItem(type_&#x3D;&quot;min&quot;, name&#x3D;&quot;最小值&quot;),\n                opts.MarkPointItem(type_&#x3D;&quot;max&quot;, name&#x3D;&quot;最大值&quot;),\n                opts.MarkPointItem(type_&#x3D;&quot;average&quot;, name&#x3D;&quot;平均值&quot;),\n            ]\n        ),\n    )\n)\nbar.render_notebook()\n效果：\n旋转x轴坐标from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nimport random\nl1&#x3D;[&#39;很长很长很长很长很长的坐标轴&#123;&#125;&#39;.format(i) for i in range(10)]\nl2&#x3D;[random.choice(range(10,100,10)) for i in range(10)]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .set_global_opts(xaxis_opts&#x3D;opts.AxisOpts(axislabel_opts&#x3D;opts.LabelOpts(rotate&#x3D;-15)),\n                     title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Bar-旋转X轴标签&quot;, subtitle&#x3D;&quot;解决标签名字过长的问题&quot;))\n)\nbar.render_notebook()\n效果：rotate=-15表示将坐标轴逆时针旋转15度\n横坐标缩放整体缩放（type_=”inside”）鼠标滑轮转动可以缩放！！效果很不错！！\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\nimport random\nl1&#x3D;[&#39;&#123;&#125;日&#39;.format(i) for i in range(1,31)]\nl2&#x3D;[random.choice(range(100,3100,100)) for i in range(1,31)]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;区域缩放柱状图&quot;),\n                     datazoom_opts&#x3D;opts.DataZoomOpts(type_&#x3D;&quot;inside&quot;))\n)\nbar.render_notebook()\n效果：暂时没有动图，小伙伴们可以自己跑一边，鼠标滚轮可以控制缩放！！\n左右滑动缩放更上面一样可以缩放，只不过是下方有个缩放条，可以滑动。\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\nimport random\nl1&#x3D;[&#39;&#123;&#125;日&#39;.format(i) for i in range(1,31)]\nl2&#x3D;[random.choice(range(100,3100,100)) for i in range(1,31)]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;区域缩放柱状图&quot;),\n                     datazoom_opts&#x3D;opts.DataZoomOpts(type_&#x3D;&quot;slider&quot;))\n)\nbar.render_notebook()\n效果：\n","slug":"pyecharts柱状图","date":"2021-12-14T15:11:16.000Z","categories_index":"Python数据分析","tags_index":"Python,pyechart,柱状图","author_index":"Quanito"},{"id":"d2e824b84fe557a1bf7670107ad71044","title":"滚动地球","content":"封面拍摄于2019年东，法国某高架桥处。当时本人从凌晨三点从荒无人烟的地方漫步，看见了日出的一幕。\n很简单的小玩意儿，没什么太大含金量，老手可以直接划走。\n首先代码运行环境Jupyter Notebook就不必要介绍了。方法比较简单，首先安装pyecharts==1.7.1及以上版本，新安装的小朋友们完全不必担心：\npip install pyecharts\n之后步入正题，如下代码所示，\n\nPOPULATION导入的是全球各国人口数量，所以地球上不同颜色代表各个国家的人数多少,你也可以根据自己的喜好导入其他数据。\n\nimport pyecharts.options as opts\nfrom pyecharts.charts import MapGlobe\nfrom pyecharts.faker import POPULATION\ndata &#x3D; [x for _, x in POPULATION[1:]]\nlow, high &#x3D; min(data), max(data)\nc &#x3D; (\n    MapGlobe(init_opts&#x3D;opts.InitOpts())\n    .add_schema()\n    .add(\n        maptype&#x3D;&quot;world&quot;,\n        series_name&#x3D;&quot;World Population&quot;,\n        data_pair&#x3D;POPULATION[1:],\n        is_map_symbol_show&#x3D;False,\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n    )\n    .set_global_opts(\n        visualmap_opts&#x3D;opts.VisualMapOpts(\n            min_&#x3D;low,\n            max_&#x3D;high,\n            range_text&#x3D;[&quot;max&quot;, &quot;min&quot;],\n            is_calculable&#x3D;True,\n            is_piecewise&#x3D;True,\n            range_color&#x3D;[&quot;lightskyblue&quot;, &quot;yellow&quot;, &quot;orangered&quot;],\n        )\n    )\n)\nc.render_notebook()\n效果图（鼠标可以拖动，效果很爆炸，好吧，也就是一般爆炸）：2. 可以导入不同的主题，主题类型如下：  themes = [ (‘chalk’, ‘粉笔风’), (‘dark’, ‘暗黑风’), (‘essos’, ‘厄索斯大陆’), (‘infographic’, ‘信息图’), (‘light’, ‘明亮风格’), (‘macarons’, ‘马卡龙’), (‘purple-passion’, ‘紫色激情’), (‘roma’, ‘石榴’), (‘romantic’, ‘浪漫风’), (‘shine’, ‘闪耀风’), (‘vintage’, ‘复古风’), (‘walden’, ‘瓦尔登湖’), (‘westeros’, ‘维斯特洛大陆’), (‘white’, ‘洁白风’), (‘wonderland’, ‘仙境’) ]3. LabelOpts 显示地图标签，把False改成True,国家名字就显示出来了4. maptype 改变地图范围，把world改成china;同理，也可以制作只显示北京等各省市的地球图\n","slug":"滚动地球","date":"2021-12-14T14:11:16.000Z","categories_index":"Python数据分析","tags_index":"Python,滚动地球","author_index":"Quanito"},{"id":"99c14f396bae7b0d0fb2bdef7caba356","title":"Biarritz-大西洋海岸珍宝度假区（一）","content":"框架出现了一些问题，目前正在修复，一旦修复完成就会开始更新~\n","slug":"Biarritz","date":"2021-12-11T14:12:30.000Z","categories_index":"旅行日记","tags_index":"法国Biarritz","author_index":"Quanito"},{"id":"adec8ed7d2062f729277d84bfa0e38f0","title":"Markdown使用手册","content":"注意：本博客搭建使用的框架是基于Node.js的hexo，主题是Aurora。所以无法兼容Markdown的某些功能，比如流程图，Latex公式，注脚，还有一部分HTML原生代码😊\n为了提高我自己的开发效率，我打算从头写一边Markdown开发笔记。并且加入一些个人的看法和备注。\n因为之前有过Latex和前端的基础。对于这种新接触到的排版类型的语言接受能力还是很高的。在此非常感谢Latex陪伴我走过很多年，写过大大小小的报告和论文，有机会我会把我常用的latex模板放上来！！！\n废话不多说，步入正题！\n\n字体*斜体*或_斜体_\n**粗体**\n***加粗斜体***\n~~删除线~~\n效果：斜体或_斜体_粗体加粗斜体删除线\n分级标题注意空格！！！\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n效果就不展示了，导航栏会乱。\n超链接有很多种写法，只列出我自己喜欢的行内式。如果在文本中多次引用可以使用参考式。但是我个人觉得参考式虽然代码清爽了那么一丢丢，后期如果出错会很麻烦！！因为IDEA对markdown文件中的对象不支持跳转，所以更改的时候要先看看改哪里，然后记住代号，然后去文件末尾找一堆堆的链接。。。。\n[]里写链接文字，()里写链接地址, ()中的”“中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。[链接文字](链接地址 “链接标题”)’这样的形式。链接地址与链接标题前有一个空格。\n欢迎来到[梵居闹市](http:&#x2F;&#x2F;blog.leanote.com&#x2F;freewalk)\n欢迎来到[梵居闹市](http:&#x2F;&#x2F;blog.leanote.com&#x2F;freewalk &quot;梵居闹市&quot;)\n&lt;http:&#x2F;&#x2F;example.com&#x2F;&gt;\n&lt;address@example.com&gt;\n\n效果：欢迎来到梵居闹市欢迎来到梵居闹市http://example.com/&#97;&#x64;&#x64;&#x72;&#x65;&#115;&#x73;&#64;&#x65;&#x78;&#97;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#99;&#x6f;&#109;\n页内跳转超链接## 0. 目录&#123;#index&#125;\n\n跳转到[目录](#index)\n效果就不展示了。。。\n列表无序列表注意空格！！！\n- 无序列表项 一\n- 无序列表项 二\n- 无序列表项 三\n效果：\n\n无序列表项 一\n无序列表项 二\n无序列表项 三有序列表感觉智商有被侮辱到 -.-…1. 有序列表项 一\n2. 有序列表项 二\n3. 有序列表项 三\n效果：\n\n\n有序列表项 一\n有序列表项 二\n有序列表项 三\n\n至于定义型列表。。。个人感觉和这个有序列表一样没必要。不就是代码块中列定义，纯属脱裤子放屁多此一举。\n列表缩进这个可以让列表下方跟第一行缩进一致，效果还挺好看的。\n*   轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。\n那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 \n软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！\n     那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 \n寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 \n但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ \n*    悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。\n\n\n轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！   那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ \n   悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。\n\n大概有用的就是这些，其他的设计代码排版还不如直接截图\n引用普通引用Markdown 允许你只在整个段落的第一行最前面加上 &gt; ，效果如下：\n\n\n\n\n\n\n\n\n\n这是一个有两段文字的引用,无意义的占行文字1.无意义的占行文字2.\n无意义的占行文字3.无意义的占行文字4.\n多层引用&gt;&gt;&gt; 请问 Markdwon 怎么用？ - 小白\n&gt;&gt;&gt;\n&gt;&gt; 自己看教程！ - 愤青\n&gt;&gt;\n&gt; 教程在哪？ - 小白\n&gt;\n\n\n\n\n\n\n\n\n\n\n\n请问 Markdwon 怎么用？ - 小白\n自己看教程！ - 愤青\n\n教程在哪？ - 小白\n\n引用中添加代码&gt; 1.   这是第一行列表项。\n&gt; 2.   这是第二行列表项。\n&gt; \n&gt; 给出一些例子代码：\n&gt; \n&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);\n效果：\n\n\n\n\n\n\n\n\n\n\n  这是第一行列表项。\n  这是第二行列表项。\n\n给出一些例子代码：\nreturn shell_exec(&quot;echo $input | $markdown_script&quot;);\n\n插入图像我只使用行内式，参考式虽然代码看起来清爽一丢丢，但是后期有问题的话维护成本太高。\n![波尔多](https:&#x2F;&#x2F;user-images.githubusercontent.com&#x2F;59725125&#x2F;145532785-07737376-50bd-4754-8fe2-2aa7ed01fa4d.jpg &quot;波尔多&quot;)\n这个时候有一个问题，Markdown只会把图片原尺寸原封不动的展示，无法调节图片大小。幸运的是Markdown可以直接写HTML！！！然后就没问题了是不。\n&lt;p style&#x3D;&quot;text-align:center&quot;&gt;\n&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;user-images.githubusercontent.com&#x2F;59725125&#x2F;145532785-07737376-50bd-4754-8fe2-2aa7ed01fa4d.jpg&quot;  height&#x3D;&quot;330&quot; width&#x3D;&quot;495&quot;&gt;\n&lt;&#x2F;p&gt;\n\n\n\n\n注脚使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。\n\n[^1]:Markdown是一种纯文本标记语言\n[^2]:HyperText Markup Language 超文本标记语言\n[^Le]:开源笔记平台，支持Markdown和笔记直接发为博文\n效果：使用 Markdown^1可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。\n[^2]:HyperText Markup Language 超文本标记语言[^Le]:开源笔记平台，支持Markdown和笔记直接发为博文\nLatex 公式这是我万万没有想到的。有了Latex支持，岂不是数学公式什么的轻轻松松搞定。直接用美元符号$框起来就行，两个美元是整行公式。懂Latex的朋友就知道多简单了。\n质能守恒方程可以用一个很简洁的方程式 $E&#x3D;mc^2$ 来表达。\n$$f(x_1,x_x,\\ldots,x_n) &#x3D; x_1^2 + x_2^2 + \\cdots + x_n^2 $$\n$$\\sum^&#123;j-1&#125;_&#123;k&#x3D;0&#125;&#123;\\widehat&#123;\\gamma&#125;_&#123;kj&#125; z_k&#125;$$\n质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2 $$$$\\sum^{j-1}{k=0}{\\widehat{\\gamma}{kj} z_k}$$\n流程图暂时没找到案例，网上给的以往的代码都实现不了。\nflow\nst&#x3D;&gt;start: Start:&gt;https:&#x2F;&#x2F;www.zybuluo.com\nio&#x3D;&gt;inputoutput: verification\nop&#x3D;&gt;operation: Your Operation\ncond&#x3D;&gt;condition: Yes or No?\nsub&#x3D;&gt;subroutine: Your Subroutine\ne&#x3D;&gt;end\nst-&gt;io-&gt;op-&gt;cond\ncond(yes)-&gt;e\ncond(no)-&gt;sub-&gt;io\n\n如果有人知道怎么做，欢迎留言板告诉我哟~\n表格|学号|姓名|分数|\n|-|-|-|\n|小明|男|75|\n|小红|女|79|\n|小陆|男|92|\n\n\n\n\n学号\n姓名\n分数\n\n\n\n小明\n男\n75\n\n\n小红\n女\n79\n\n\n小陆\n男\n92\n\n\n","slug":"Markdown","date":"2021-12-10T07:39:10.000Z","categories_index":"Web development","tags_index":"Markdown","author_index":"Quanito"},{"id":"a8b91d116b5192895cd66fd06258d860","title":"Markdown容器使用手册","content":"\n\n\n此图摄于法国国庆节当日晚，波尔多水镜广场烟花晚会时。\n\nIt’s my first time to build a personal blog site.The purpose of this blog is for me to refer to how this system is used.\nMarkdown自定义容器:::[type] [title]\n文本内容\n:::\n\nTip 容器:::tip\nNormal Tips Container\n:::\n\n\n\n\n\n\n\n提示\nNormal Tips Container\n\n:::tip Custom header\n\nCustom header\n\n- tips content\n- tips new line\n\n:::\n\n\n\n\n\n\nCustom header\nCustom header\n\ntips content\ntips new line\n\n\n\nWarning 容器:::warning\nWarning!!!\n:::\n\n\n\n\n\n\n\n\n注意\nWarning!!!\n\nDanger 容器:::danger\nDanger!!!\n:::\n\n\n\n\n\n\n\n特别注意\nDanger!!!\n\nDetails 容器:::details Click to see more\n\nFusce rutrum venenatis eros in hendrerit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam eget risus egestas, aliquet ipsum sed, volutpat tortor. Proin finibus tortor ac mauris finibus rutrum. Nullam tincidunt arcu eu urna ullamcorper, eu ultricies turpis ornare. Morbi id sollicitudin orci. Proin lobortis vehicula nibh a ornare. Cras sodales eu ligula quis fermentum. Proin eu ultrices leo, quis iaculis justo. Sed dictum, nulla sit amet imperdiet commodo, libero sapien semper justo, ut lobortis elit nunc vitae ante. Nullam lobortis odio quam, ac condimentum elit posuere vitae. Sed ornare, odio et rutrum varius, lorem eros gravida urna, in pharetra sapien justo non magna.\n\n- details content\n- details new line\nconsole.log(&#39;hello world&#39;)\n:::\n\nClick to see more\nFusce rutrum venenatis eros in hendrerit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam eget risus egestas, aliquet ipsum sed, volutpat tortor. Proin finibus tortor ac mauris finibus rutrum. Nullam tincidunt arcu eu urna ullamcorper, eu ultricies turpis ornare. Morbi id sollicitudin orci. Proin lobortis vehicula nibh a ornare. Cras sodales eu ligula quis fermentum. Proin eu ultrices leo, quis iaculis justo. Sed dictum, nulla sit amet imperdiet commodo, libero sapien semper justo, ut lobortis elit nunc vitae ante. Nullam lobortis odio quam, ac condimentum elit posuere vitae. Sed ornare, odio et rutrum varius, lorem eros gravida urna, in pharetra sapien justo non magna.\n\ndetails content\ndetails new line\n\nconsole.log(&#39;hello world&#39;)\n\n\n\n","slug":"helloworldquan","date":"2021-12-07T09:38:01.000Z","categories_index":"Web development","tags_index":"Markdown,Container,容器","author_index":"Quanito"},{"id":"f0813c08952e580ef1165604bee18e32","title":"Hexo Quick start","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2021-12-07T08:19:24.603Z","categories_index":"Web development","tags_index":"Hexo","author_index":"Quanito"}]