[{"id":"14a8fdac4ef702438f22e0da4997bcf9","title":"二、MySQL及DataGrip部署","content":"二、MySQL及DataGrip部署1、MySQL安装\n参考MySQL安装文档实现安装\n\n2、DataGrip的安装\n功能：使用图形化界面的方式来操作MySQL，进行数据的管理\n参考DataGrip安装文档实现安装\n\n3、DataGrip连接MySQL\n创建一个连接，配置连接MySQL即可\n\nMySQL所在机器的地址和端口\n\n地址：localhost\n端口：3306\n\n\nMySQL的连接驱动\n\n下载\n\n\nMySQL用户名和密码\n用户名：root\n密码：123456\nMySQL连接地址属性\njdbc:mysql:&#x2F;&#x2F;localhost:3306?serverTimezone&#x3D;UTC\n\n\n\n","slug":"数据库管理系统MySQL2","date":"2021-12-24T13:13:12.000Z","categories_index":"BI商业大数据分析平台搭建","tags_index":"大数据分析,BI平台","author_index":"Quanito"},{"id":"cc85ea780ac0ade5ef1791fdfe1e3418","title":"一、MySQL介绍","content":"一、MySQL的介绍1、大数据本质\n利用大数据的软件工具对大数据进行处理，从数据中挖掘价值\n\n2、数据处理流程\n数据采集：将产生各种数据进行统一化的存储\n数据存储：将数据存储数据仓库中\n数据处理：使用SQL开发语言开发程序对数据进行处理\n数据应用：将处理好的结果进行 应用\n\n3、数据存储及处理\n存储的形式：文件\n不能满足企业中对于数据处理需求\n\n\n工作需求：更加规范的数据存储、处理\n早期：Excel【表格，聚合统计分析，图表】\n问题\nExcel能承载的数据量大小：MB\n实际工作中要处理的数据大小：GB\n\n\nExcel中提供的功能不能满足对数据处理的需求\n支持开发不同的功能\n开发的方式不太友好\n\n\n\n\n解决\n数据库管理系统\n\n\n\n\n\n4、数据库管理系统\n功能\n专门用户数据存储、处理数据的工具\n\n\n特点\n承载数据量会更大\n更加规范化\n功能更加全面\n开发接口更加优化：SQL\n\n\n应用场景\n网站后台中存储商品信息、订单信息、用户注册 信息\n\n\n\n5、MySQL介绍及概念\n常见的数据库管理系统\n\nOracle：Sun公司商业化数据库产品，性能功能是最强大，但是是收费的商业化产品\nSQL Server：微软公司的产品，受Windows局限性比较大 ，市场占有率并不高，收费\nMySQL：Sun公司的社区产品，体积小，速度快，总体使用的成本比较低\n\n\nMySQL的介绍\n\n典型的市场占有率是最高的数据库管理系统\n在国内非常广泛\n所有网站后台的存储\n\n\n\n\n概念\n\n数据库管理系统\n\n专门用户存储和处理数据【结构化数据】的工具\nMySQL就是一个数据库管理系统\n\n\n结构化数据\n\n例如：表格，行和列是固定的\n行和列是固定的结构，就是数据的格式存在一定的规律\n\n\n数据库：MySQL中用于管理和区分数据表的单元\n\ndatabase\n理解为对数据进行分类存放的划分\n数据库1：存放用户的数据\n数据库2：存放商品的数据\n数据库3：存放订单的数据\n类似于一个Excel文件\n人事：人事的Excel文件\n财务：财务的Excel文件\n\n\n\n\n表格：MySQL中用于在数据库中划分数据的单元\n\n将数据进行更细的划分\n类似于一个Excel文件中会有多张表\n人事Excel文件 \n在职人员信息表\n离职人员信息表\n\n\n财务Excel文件\n报销信息表\n收入信息表\n报税信息表\n\n\n\n\n\n\n数据库管理系统与Excel对比\n\n\n\nExcel\nMySQL\n\n\n\n一个Excel文件\n一个数据库\n\n\n可以有多个Excel的sheet表格\n可以有多张数据表\n\n\n表格有行和列\n表格中有行和列\n\n\n\n区别：\nMySQL功能更加强大\nExcel的开发比较复杂\nMySQL对数据进行处理：SQL\n\n\n\n\n\n\nMySQL的使用\n\nSQL：开发语言，实现数据的存储以及分析管理\n\n\n\n","slug":"数据库管理系统MySQL1","date":"2021-12-24T13:05:12.000Z","categories_index":"BI商业大数据分析平台搭建","tags_index":"大数据分析,BI平台","author_index":"Quanito"},{"id":"e3b28e08d06ce54864d09189bebacd02","title":"简介","content":"这一分类为一个完整的项目。我要学习一步步搭建一个BI商业大数据分析平台。\n数据库管理系统MySQL首先复习加强化SQL，学习使用MySQL图形化开发工具-DataGrip\n可视化ETL工具Kettle学习Kettle开发，重点在于文本输入与Excel输出，Excel输入与MySQL输出以及这种组件开发。\n数据可视化分析平台FineBI重点在于数据可视化，FineBI应用等。\n","slug":"BI商业大数据分析平台搭建","date":"2021-12-19T15:54:39.000Z","categories_index":"BI商业大数据分析平台搭建","tags_index":"大数据分析,BI平台","author_index":"Quanito"},{"id":"53b940f6ea7d5afb2d81c3c681083d3b","title":"基于R推荐系统搭建","content":"前言首先，R语言牛皮之处就不过多阐述，总之很方便很方便。R语言就是为了数据处理而生的，可以轻松链接数据库，可以轻松对数据进行处理和分析。\n这篇博客主要归纳一下如何使用R语言搭建一个简单的推荐系统。首先导入包：\n#install.packages(&quot;RJDBC&quot;) 如果第一次使用，要下载所需要的包，然后使用。\nlibrary(RJDBC)\n#以下是一些画图使用的包，还有一些机器学习算法。\nlibrary(rvest)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(scales)\nlibrary(maps)\nlibrary(mapproj)\nlibrary(plotly)\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(C50)\nlibrary(tree)\nlibrary(ROCR)\nlibrary(randomForest)\nlibrary(e1071)\nlibrary(naivebayes)\nlibrary(nnet)\nlibrary(kknn)\n链接Oracle数据库如果有小伙伴想复现这个项目，可以直接去我的github下载csv数据文件，用R导入csv数据也是一样的效果(Imm..表只给出了前几百条数据，因为数据文件太大，无法上传仓库)：\n项目仓库\n虽然有些公司可能节约成本选择使用Mysql，但是学习Oracle还是非常有必要的。在顶端DBA大师眼中，能在PDB中进行协作的Oracle有着无可取代的天然优势。更别提我们可以通过Hive工具创建Oracle内外表后使用Oracle sql, Oracle Nosql, Hadoop HDFS, MongDB搭建数据湖。这对企业的大数据架构的整合有着巨大的价值。\n在此之前需要下载jdbc的jar包：点击链接进行下载drives文件\n链接配置规则： \nconn&lt;-dbConnect(drv,“jdbc:oracle:thin:@主机IP:1521:数据库名称”,“用户名称”,“密码”)\n远程链接：\ndrv &lt;- RJDBC::JDBC(driverClass &#x3D; &quot;oracle.jdbc.OracleDriver&quot;, classPath &#x3D;  Sys.glob(&quot;C:&#x2F;Users&#x2F;12506&#x2F;OneDrive&#x2F;Desktop&#x2F;ESTIA3A&#x2F;R&#x2F;Oracle&#x2F;drivers&#x2F;*&quot;))\n\nconn &lt;- dbConnect(drv, &quot;jdbc:oracle:thin:@(DESCRIPTION&#x3D;(ADDRESS&#x3D;(PROTOCOL&#x3D;TCP)(HOST&#x3D;144.21.67.201)(PORT&#x3D;1521))(CONNECT_DATA&#x3D;(SERVICE_NAME&#x3D;pdbest21.631174089.oraclecloud.internal)))&quot;, &quot;ZHANG2B20&quot;, &quot;ZHANG2B2001&quot;)\n\nallTables &lt;- dbGetQuery(conn, &quot;SELECT owner, table_name FROM all_tables where owner &#x3D; &#39;ZHANG2B20&#39;&quot;)\n本地链接(我没有试过，你们可以参考如下例子)：\ndrv&lt;-JDBC(&quot;oracle.jdbc.driver.OracleDriver&quot;,&quot;ojdbc6_g.jar&quot;, identifier.quote&#x3D;&quot;\\&quot;&quot;)  ##java中JDBC的套路\nconn&lt;-dbConnect(drv,&quot;jdbc:oracle:thin:@10.0.0.214:1521:zlhis&quot;,&quot;zlhis1234&quot;,&quot;his123&quot;) ##建立一个连接\nEMP&lt;-dbReadTable(conn,&#39;EMP&#39;) ##根据连接和表名获取Oracle中的表\ntable1&lt;-dbGetQuery(conn,&quot;select * from user_tables&quot;)  ##根据sql记录获取Oracle中表的数据\n————————————————\n版权声明：本文为CSDN博主「dltan」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https:&#x2F;&#x2F;blog.csdn.net&#x2F;tandelin&#x2F;article&#x2F;details&#x2F;99300248\n如果数据有乱码：\nnames(table1)&#x3D;iconv(names(table1),&quot;UTF-8&quot;,&quot;GBK&quot;) ##若是表中列名为中文，读取时出现乱码，可用这句来搞定乱码情况\n\n所以按着我的例子来吧~ \n接下来介绍下数据：\ntableCatalogue &lt;- dbGetQuery(conn, &quot;select * from Catalogue&quot;)\ntableClients &lt;- dbGetQuery(conn, &quot;select * from Clients&quot;)\ntableIm &lt;- dbGetQuery(conn, &quot;select * from IMMATRICULATION&quot;)\ntableMar &lt;- dbGetQuery(conn, &quot;select * from MARKETING&quot;)\nView(tableCatalogue)\nView(tableClients)\nView(tableIm)\nView(tableMar)\n一共有四个表:\n\nCatalogue 记录着一共270种汽车型号，不同的颜色，品牌，马力等等。\nClient 记录着以往的购买记录，客户的信息对应所购买的车牌号。\nImmatriculation 记录着车牌号对应的汽车信息，这些汽车的种类包含于上述270种。\nMarketing 9个新客户，为他们提供一个车型的推荐，最终交付成果是给他们\n\n确定标签以下举一个例子，就好比我们要探究客户的特征和购买车辆的价格的关系。\n因为Client表只记录了客户的信息对应所购买的车牌号（车管所数据）。我们需要融合Client和Catalogue两个表，就能把标签-价格和客户的特征放在同一个表中：\ntableIm_f &lt;- merge(tableIm, tableCatalogue, by &#x3D; c(&quot;MARQUE&quot;,&quot;NOM&quot;, &quot;PUISSANCE&quot;, &quot;LONGUEUR&quot;, &quot;NBPORTES&quot;,&quot;COULEUR&quot;,&quot;OCCASION&quot;,&quot;PRIX&quot;))\nsummary(tableIm_f)\ntableImPrix &lt;- tableIm_f[c(8, 9)]\ntablePrixFinal &lt;- merge(tableClients, tableImPrix, by &#x3D; &quot;IMMATRICULATION&quot;, incomparables &#x3D; NA)\n(未完待续。。。)\n","slug":"基于R推荐系统搭建","date":"2021-12-15T08:12:39.000Z","categories_index":"R语言数据分析","tags_index":"R语言,机器学习,推荐系统","author_index":"Quanito"},{"id":"e46e4f822f7f4d970d27f487afc0732f","title":"公交系统线路动图","content":"关于调用百度API，能做的事情不仅仅这一个。可以随心所欲绘制自己想要的效果。\n调用百度API首先来这里注册一个秘钥\n百度地图开放平台\n然后在控制台依次点击控制台-应用管理-我的应用-创建应用\n\n创建一个浏览器端应用。复制生成的AK\n如果是服务端，可以在cmd中输入ipconfig/all查看自己的IP地址\n数据我下载了echarts官方给的北京公交车地理数据\n下载地址\n想做什么应用就可以自己寻找数据，通常情况下地学数据共享平台等等能找到你想要的数据\n代码import json\nwith open(&#39;北京公交线路图.json&#39;,&#39;r&#39;) as f:\n    datas&#x3D;json.load(f)\nresult&#x3D;[]\nfor data in datas:\n    data &#x3D; [float(i &#x2F; 10000) for i in data]\n    a&#x3D;[]\n    for i in range(2,len(data),2):\n        data[i]&#x3D;data[i-2]+data[i]\n        data[i+1] &#x3D; data[i - 1] + data[i+1]\n        a.append([data[i],data[i+1]])\n    result.append(a)\nfrom pyecharts.charts import BMap\nfrom pyecharts import options as opts\nfrom pyecharts.faker import Faker\n\nBAIDU_MAP_AK &#x3D; &quot;输入你自己的AK码&quot;\n\nc &#x3D; (\n    BMap(init_opts&#x3D;opts.InitOpts(width&#x3D;&quot;1200px&quot;, height&#x3D;&quot;800px&quot;))\n    .add_schema(\n        baidu_ak&#x3D;BAIDU_MAP_AK,\n        center&#x3D;[116.40, 40.04],\n        zoom&#x3D;10,\n        is_roam&#x3D;True,\n    )\n    .add(\n        &quot;&quot;,\n        type_&#x3D;&quot;lines&quot;,\n        is_polyline&#x3D;True,\n        data_pair&#x3D;result,\n        linestyle_opts&#x3D;opts.LineStyleOpts(opacity&#x3D;0.2, width&#x3D;0.5,color&#x3D;&#39;red&#39;),\n        # 如果不是最新版本的话可以注释下面的参数（效果差距不大）\n        progressive&#x3D;200,\n        progressive_threshold&#x3D;500,\n    )\n)\nc.render_notebook()\n效果如下：\n","slug":"公交系统线路动图","date":"2021-12-15T04:06:27.000Z","categories_index":"Python数据分析","tags_index":"公交路线,百度Api","author_index":"Quanito"},{"id":"ce2fec8b4c37214b0a0a286c8164327b","title":"pyecharts柱状图-进阶","content":"封面跟初阶的是兄弟俩，估计很多人没体验过独自一人漫无目的行走几十公里，然后平静地等待日出。关于录制gif:\n电脑如何录制GIF\n我总算知道了为什么有人倾向于拿python做网站。这图像导出来的动画效果真棒！交互感爆炸\n废话不多说，开始正题：\n数据堆叠柱状图from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nl3&#x3D;[300,400,500,400,300,200,100]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2, stack&#x3D;&quot;stack1&quot;)\n    .add_yaxis(&quot;l3&quot;, l3, stack&#x3D;&quot;stack1&quot;)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;数据堆叠&quot;))\n)\nbar.render_notebook()\n效果：\n柱状图和折线图合并import pyecharts.options as opts\nfrom pyecharts.charts import Bar, Line\n\nx_data &#x3D; [&quot;1月&quot;, &quot;2月&quot;, &quot;3月&quot;, &quot;4月&quot;, &quot;5月&quot;, &quot;6月&quot;, &quot;7月&quot;, &quot;8月&quot;, &quot;9月&quot;, &quot;10月&quot;, &quot;11月&quot;, &quot;12月&quot;]\ny_data &#x3D; [2.6,5.9,9.0,26.4,28.7,70.7,175.6,182.2,48.7,18.8,6.0,2.3,]\nbar &#x3D; (\n    Bar(init_opts&#x3D;opts.InitOpts(width&#x3D;&quot;1000px&quot;, height&#x3D;&quot;500px&quot;))\n    .add_xaxis(xaxis_data&#x3D;x_data)\n    .add_yaxis(\n        &quot;降水量&quot;,\n        y_data,\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n    )\n    .set_global_opts(\n        tooltip_opts&#x3D;opts.TooltipOpts(\n            is_show&#x3D;True, trigger&#x3D;&quot;axis&quot;, axis_pointer_type&#x3D;&quot;cross&quot;\n        ),\n        xaxis_opts&#x3D;opts.AxisOpts(\n            type_&#x3D;&quot;category&quot;,\n            axispointer_opts&#x3D;opts.AxisPointerOpts(is_show&#x3D;True, type_&#x3D;&quot;shadow&quot;),\n        ),\n        yaxis_opts&#x3D;opts.AxisOpts(\n            name&#x3D;&quot;水量&quot;,\n            type_&#x3D;&quot;value&quot;,\n            min_&#x3D;0,\n            max_&#x3D;250,\n            interval&#x3D;50,\n            axislabel_opts&#x3D;opts.LabelOpts(formatter&#x3D;&quot;&#123;value&#125; ml&quot;),\n            axistick_opts&#x3D;opts.AxisTickOpts(is_show&#x3D;True),\n            splitline_opts&#x3D;opts.SplitLineOpts(is_show&#x3D;True),\n        ),\n    )\n)\n\nline &#x3D; (\n    Line()\n    .add_xaxis(xaxis_data&#x3D;x_data)\n    .add_yaxis(\n        series_name&#x3D;&quot;降水量&quot;,\n        yaxis_index&#x3D;0,\n        y_axis&#x3D;[2.6,5.9,9.0,26.4,28.7,70.7,175.6,182.2,48.7,18.8,6.0,2.3,],\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n    )\n)\n\nbar.overlap(line).render_notebook()\n效果：yaxis_opts=opts.AxisOpts(）中可以设置纵坐标起止范围和间隔\n双纵坐标柱状图import pyecharts.options as opts\nfrom pyecharts.charts import Bar, Line\nx_data &#x3D; [&quot;1月&quot;, &quot;2月&quot;, &quot;3月&quot;, &quot;4月&quot;, &quot;5月&quot;, &quot;6月&quot;, &quot;7月&quot;, &quot;8月&quot;, &quot;9月&quot;, &quot;10月&quot;, &quot;11月&quot;, &quot;12月&quot;]\ny_data &#x3D; [2.0, 4.9,7.0, 23.2,25.6,76.7,135.6,162.2,32.6,20.0, 6.4,3.3,]\n\nbar &#x3D; (\n    Bar(init_opts&#x3D;opts.InitOpts(width&#x3D;&quot;1000px&quot;, height&#x3D;&quot;600px&quot;))\n    .add_xaxis(xaxis_data&#x3D;x_data)\n    .add_yaxis(\n        &quot;蒸发量&quot;,\n        y_data,\n        yaxis_index&#x3D;0,\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n    )\n    .add_yaxis(\n        &quot;平均温度&quot;,\n        [2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4, 23.0, 16.5, 12.0, 6.2],\n        yaxis_index&#x3D;1,\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n    )\n    .extend_axis(\n        yaxis&#x3D;opts.AxisOpts(\n            name&#x3D;&quot;温度&quot;,\n            type_&#x3D;&quot;value&quot;,\n            min_&#x3D;0,\n            max_&#x3D;25,\n            interval&#x3D;5,\n            axislabel_opts&#x3D;opts.LabelOpts(formatter&#x3D;&quot;&#123;value&#125; °C&quot;),\n        )\n    )\n    .set_global_opts(\n        tooltip_opts&#x3D;opts.TooltipOpts(\n            is_show&#x3D;True, trigger&#x3D;&quot;axis&quot;, axis_pointer_type&#x3D;&quot;cross&quot;\n        ),\n        xaxis_opts&#x3D;opts.AxisOpts(\n            type_&#x3D;&quot;category&quot;,\n            axispointer_opts&#x3D;opts.AxisPointerOpts(is_show&#x3D;True, type_&#x3D;&quot;shadow&quot;),\n        ),\n        yaxis_opts&#x3D;opts.AxisOpts(\n            name&#x3D;&quot;水量&quot;,\n            type_&#x3D;&quot;value&quot;,\n            min_&#x3D;0,\n            max_&#x3D;250,\n            interval&#x3D;50,\n            axislabel_opts&#x3D;opts.LabelOpts(formatter&#x3D;&quot;&#123;value&#125; ml&quot;),\n            axistick_opts&#x3D;opts.AxisTickOpts(is_show&#x3D;True),\n            splitline_opts&#x3D;opts.SplitLineOpts(is_show&#x3D;True),\n        ),\n    )\n)\nbar.render_notebook()\n效果：\nextend_axis:增加了以温度为刻度的纵坐标轴\nadd_yaxis:yaxis_index=0表示该数据用第一个坐标轴，yaxis_index=1表示该数据用第二个坐标轴\n为柱状图添加背景图片from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nfrom pyecharts.commons.utils import JsCode\nfrom pyecharts.faker import Faker\nl2&#x3D;[100,200,300,400,500,400,300]\nl3&#x3D;[300,400,500,400,300,200,100]\nbar &#x3D; (\n    Bar(\n        init_opts&#x3D;opts.InitOpts(\n            bg_color&#x3D;&#123;&quot;type&quot;: &quot;pattern&quot;, &quot;image&quot;: JsCode(&quot;img&quot;), &quot;repeat&quot;: &quot;no-repeat&quot;&#125;\n        )\n    )\n    .add_xaxis(Faker.choose())\n    .add_yaxis(&quot;商家A&quot;, l2)\n    .add_yaxis(&quot;商家B&quot;, l3)\n    .set_global_opts(\n        title_opts&#x3D;opts.TitleOpts(\n            title&#x3D;&quot;Bar-背景图基本示例&quot;,\n            subtitle&#x3D;&quot;我是副标题&quot;,\n            title_textstyle_opts&#x3D;opts.TextStyleOpts(color&#x3D;&quot;white&quot;),\n        )\n    )\n)\nbar.add_js_funcs(\n    &quot;&quot;&quot;\n    var img &#x3D; new Image(); img.src &#x3D; &#39;https:&#x2F;&#x2F;user-images.githubusercontent.com&#x2F;59725125&#x2F;145532785-07737376-50bd-4754-8fe2-2aa7ed01fa4d.jpg&#39;;\n    &quot;&quot;&quot;\n)\nbar.render_notebook()\n效果：只需更改img.src中图片url地址即可更换背景\n为柱状图添加动画from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nfrom pyecharts.faker import Faker\n\nl1&#x3D;[100,200,300,400,500,400,300]\nl2&#x3D;[300,400,500,400,300,200,100]\nbar &#x3D; (\n    Bar(\n        init_opts&#x3D;opts.InitOpts(\n            animation_opts&#x3D;opts.AnimationOpts(\n                animation_delay&#x3D;1000, animation_easing&#x3D;&quot;bounceIn&quot;\n            )\n        )\n    )\n    .add_xaxis(Faker.choose())\n    .add_yaxis(&quot;商家A&quot;, l1)\n    .add_yaxis(&quot;商家B&quot;, l2)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Bar-动画配置基本示例&quot;, subtitle&#x3D;&quot;我是副标题&quot;))\n)\nbar.render_notebook()\n\n","slug":"pyecharts柱状图-进阶","date":"2021-12-14T15:42:19.000Z","categories_index":"Python数据分析","tags_index":"Python,pyechart,柱状图","author_index":"Quanito"},{"id":"bce0f12cb1963ebdb70de9d5d2cd3dd0","title":"pyecharts柱状图-初阶","content":"封面为比亚里茨海边瞭望塔上南方风景。本文为小白准备，老手可以划走。\nPyecharts简介pyecharts主要基于Web浏览器进行显示，绘制的图形比较多，包括折线图、柱状图、饼图、漏斗图 地图和极坐标图等。使用pyecharts绘图代码量很少，但绘制的图形比较美观。\npyecharts 分为 v0.5.X 和 v1 两个大版本，v0.5.X 和 v1 间不兼容，v1 是一个全新的版本 v0.5.X支持 Python2.7，3.4+。\n0.5.x 版本将不再进行维护，v1仅支持 Python3.6+。\n柱状图基于pyecharts v1.9.1 版本进行展示(2021.12月最新版本)\npyecharts柱状图/条形图基本柱状图/条形图from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;基本柱状图&quot;, l2)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Bar-基本示例&quot;, subtitle&#x3D;&quot;我是副标题&quot;))\n)\nbar.render_notebook()\n效果：add_xaxis:添加横坐标，需传入列表 add_yaxis:添加纵坐标，需传入列表，切列表元素为数值\n添加坐标轴名称from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;基本柱状图&quot;, l2)\n    .set_global_opts(\n        title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Bar-基本示例&quot;),\n        yaxis_opts&#x3D;opts.AxisOpts(name&#x3D;&quot;人流量&quot;),\n        xaxis_opts&#x3D;opts.AxisOpts(name&#x3D;&quot;星期&quot;),)\n)\nbar.render_notebook()\n效果：\n多个纵坐标的柱状图/条形图from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nl3&#x3D;[300,400,500,400,300,200,100]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .add_yaxis(&quot;l3&quot;, l3)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Bar-基本示例&quot;, subtitle&#x3D;&quot;我是副标题&quot;),\n                    toolbox_opts&#x3D;opts.BrushOpts(),)\n)\nbar.render_notebook()\n效果：\n设置柱状图间隔和颜色from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;,l2,category_gap&#x3D;0, color&#x3D;&#39;#FFFF00&#39;)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Bar-基本示例&quot;, subtitle&#x3D;&quot;我是副标题&quot;))\n)\nbar.render_notebook()\n效果：category_gap:设置间隔\ncolor：设置柱状图颜色\n横向柱状图from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nl3&#x3D;[300,400,500,400,300,200,100]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .add_yaxis(&quot;l3&quot;, l3)\n    .reversal_axis()\n    .set_series_opts(label_opts&#x3D;opts.LabelOpts(position&#x3D;&quot;right&quot;))\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;横向柱状图&quot;))\n)\nbar.render_notebook()\n效果：reversal_axis将图形反转\nposition=”right”表示将数值在图形右侧显示，同理left、center分别表示左侧和中间\n显示最大值、最小值和平均值标记线from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nimport random\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;标记线柱状图&quot;))\n    .set_series_opts(\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n        markline_opts&#x3D;opts.MarkLineOpts(\n            data&#x3D;[\n                opts.MarkLineItem(type_&#x3D;&quot;min&quot;, name&#x3D;&quot;最小值&quot;),\n                opts.MarkLineItem(type_&#x3D;&quot;max&quot;, name&#x3D;&quot;最大值&quot;),\n                opts.MarkLineItem(type_&#x3D;&quot;average&quot;, name&#x3D;&quot;平均值&quot;),\n            ]\n        ),\n    )\n)\nbar.render_notebook()\n效果：\n标记点from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nimport random\nl1&#x3D;[&#39;星期一&#39;,&#39;星期二&#39;,&#39;星期三&#39;,&#39;星期四&#39;,&#39;星期五&#39;,&#39;星期七&#39;,&#39;星期日&#39;]\nl2&#x3D;[100,200,300,400,500,400,300]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;标记线柱状图&quot;))\n    .set_series_opts(\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n        markpoint_opts&#x3D;opts.MarkPointOpts(\n            data&#x3D;[\n                opts.MarkPointItem(type_&#x3D;&quot;min&quot;, name&#x3D;&quot;最小值&quot;),\n                opts.MarkPointItem(type_&#x3D;&quot;max&quot;, name&#x3D;&quot;最大值&quot;),\n                opts.MarkPointItem(type_&#x3D;&quot;average&quot;, name&#x3D;&quot;平均值&quot;),\n            ]\n        ),\n    )\n)\nbar.render_notebook()\n效果：\n旋转x轴坐标from pyecharts import options as opts\nfrom pyecharts.charts import Bar\nimport random\nl1&#x3D;[&#39;很长很长很长很长很长的坐标轴&#123;&#125;&#39;.format(i) for i in range(10)]\nl2&#x3D;[random.choice(range(10,100,10)) for i in range(10)]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .set_global_opts(xaxis_opts&#x3D;opts.AxisOpts(axislabel_opts&#x3D;opts.LabelOpts(rotate&#x3D;-15)),\n                     title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Bar-旋转X轴标签&quot;, subtitle&#x3D;&quot;解决标签名字过长的问题&quot;))\n)\nbar.render_notebook()\n效果：rotate=-15表示将坐标轴逆时针旋转15度\n横坐标缩放整体缩放（type_=”inside”）鼠标滑轮转动可以缩放！！效果很不错！！\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\nimport random\nl1&#x3D;[&#39;&#123;&#125;日&#39;.format(i) for i in range(1,31)]\nl2&#x3D;[random.choice(range(100,3100,100)) for i in range(1,31)]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;区域缩放柱状图&quot;),\n                     datazoom_opts&#x3D;opts.DataZoomOpts(type_&#x3D;&quot;inside&quot;))\n)\nbar.render_notebook()\n效果：暂时没有动图，小伙伴们可以自己跑一边，鼠标滚轮可以控制缩放！！\n左右滑动缩放更上面一样可以缩放，只不过是下方有个缩放条，可以滑动。\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\nimport random\nl1&#x3D;[&#39;&#123;&#125;日&#39;.format(i) for i in range(1,31)]\nl2&#x3D;[random.choice(range(100,3100,100)) for i in range(1,31)]\nbar &#x3D; (\n    Bar()\n    .add_xaxis(l1)\n    .add_yaxis(&quot;l2&quot;, l2)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;区域缩放柱状图&quot;),\n                     datazoom_opts&#x3D;opts.DataZoomOpts(type_&#x3D;&quot;slider&quot;))\n)\nbar.render_notebook()\n效果：\n","slug":"pyecharts柱状图","date":"2021-12-14T15:11:16.000Z","categories_index":"Python数据分析","tags_index":"Python,pyechart,柱状图","author_index":"Quanito"},{"id":"d2e824b84fe557a1bf7670107ad71044","title":"滚动地球","content":"封面拍摄于2019年东，法国某高架桥处。当时本人从凌晨三点从荒无人烟的地方漫步，看见了日出的一幕。\n很简单的小玩意儿，没什么太大含金量，老手可以直接划走。\n首先代码运行环境Jupyter Notebook就不必要介绍了。方法比较简单，首先安装pyecharts==1.7.1及以上版本，新安装的小朋友们完全不必担心：\npip install pyecharts\n之后步入正题，如下代码所示，\n\nPOPULATION导入的是全球各国人口数量，所以地球上不同颜色代表各个国家的人数多少,你也可以根据自己的喜好导入其他数据。\n\nimport pyecharts.options as opts\nfrom pyecharts.charts import MapGlobe\nfrom pyecharts.faker import POPULATION\ndata &#x3D; [x for _, x in POPULATION[1:]]\nlow, high &#x3D; min(data), max(data)\nc &#x3D; (\n    MapGlobe(init_opts&#x3D;opts.InitOpts())\n    .add_schema()\n    .add(\n        maptype&#x3D;&quot;world&quot;,\n        series_name&#x3D;&quot;World Population&quot;,\n        data_pair&#x3D;POPULATION[1:],\n        is_map_symbol_show&#x3D;False,\n        label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False),\n    )\n    .set_global_opts(\n        visualmap_opts&#x3D;opts.VisualMapOpts(\n            min_&#x3D;low,\n            max_&#x3D;high,\n            range_text&#x3D;[&quot;max&quot;, &quot;min&quot;],\n            is_calculable&#x3D;True,\n            is_piecewise&#x3D;True,\n            range_color&#x3D;[&quot;lightskyblue&quot;, &quot;yellow&quot;, &quot;orangered&quot;],\n        )\n    )\n)\nc.render_notebook()\n效果图（鼠标可以拖动，效果很爆炸，好吧，也就是一般爆炸）：2. 可以导入不同的主题，主题类型如下：  themes = [ (‘chalk’, ‘粉笔风’), (‘dark’, ‘暗黑风’), (‘essos’, ‘厄索斯大陆’), (‘infographic’, ‘信息图’), (‘light’, ‘明亮风格’), (‘macarons’, ‘马卡龙’), (‘purple-passion’, ‘紫色激情’), (‘roma’, ‘石榴’), (‘romantic’, ‘浪漫风’), (‘shine’, ‘闪耀风’), (‘vintage’, ‘复古风’), (‘walden’, ‘瓦尔登湖’), (‘westeros’, ‘维斯特洛大陆’), (‘white’, ‘洁白风’), (‘wonderland’, ‘仙境’) ]3. LabelOpts 显示地图标签，把False改成True,国家名字就显示出来了4. maptype 改变地图范围，把world改成china;同理，也可以制作只显示北京等各省市的地球图\n","slug":"滚动地球","date":"2021-12-14T14:11:16.000Z","categories_index":"Python数据分析","tags_index":"Python,滚动地球","author_index":"Quanito"},{"id":"99c14f396bae7b0d0fb2bdef7caba356","title":"Biarritz-大西洋海岸珍宝度假区（一）","content":"最近有点没心情，过段时间更新旅行日记~\n","slug":"Biarritz","date":"2021-12-11T14:12:30.000Z","categories_index":"旅行日记","tags_index":"法国Biarritz","author_index":"Quanito"},{"id":"adec8ed7d2062f729277d84bfa0e38f0","title":"Markdown使用手册","content":"注意：本博客搭建使用的框架是基于Node.js的hexo，主题是Aurora。所以无法兼容Markdown的某些功能，比如流程图，Latex公式，注脚，还有一部分HTML原生代码😊\n为了提高我自己的开发效率，我打算从头写一边Markdown开发笔记。并且加入一些个人的看法和备注。\n因为之前有过Latex和前端的基础。对于这种新接触到的排版类型的语言接受能力还是很高的。在此非常感谢Latex陪伴我走过很多年，写过大大小小的报告和论文，有机会我会把我常用的latex模板放上来！！！\n废话不多说，步入正题！\n\n字体*斜体*或_斜体_\n**粗体**\n***加粗斜体***\n~~删除线~~\n效果：斜体或_斜体_粗体加粗斜体删除线\n分级标题注意空格！！！\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n效果就不展示了，导航栏会乱。\n超链接有很多种写法，只列出我自己喜欢的行内式。如果在文本中多次引用可以使用参考式。但是我个人觉得参考式虽然代码清爽了那么一丢丢，后期如果出错会很麻烦！！因为IDEA对markdown文件中的对象不支持跳转，所以更改的时候要先看看改哪里，然后记住代号，然后去文件末尾找一堆堆的链接。。。。\n[]里写链接文字，()里写链接地址, ()中的”“中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。[链接文字](链接地址 “链接标题”)’这样的形式。链接地址与链接标题前有一个空格。\n欢迎来到[梵居闹市](http:&#x2F;&#x2F;blog.leanote.com&#x2F;freewalk)\n欢迎来到[梵居闹市](http:&#x2F;&#x2F;blog.leanote.com&#x2F;freewalk &quot;梵居闹市&quot;)\n&lt;http:&#x2F;&#x2F;example.com&#x2F;&gt;\n&lt;address@example.com&gt;\n\n效果：欢迎来到梵居闹市欢迎来到梵居闹市http://example.com/&#97;&#x64;&#x64;&#x72;&#101;&#x73;&#x73;&#64;&#101;&#x78;&#x61;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#111;&#x6d;\n页内跳转超链接## 0. 目录&#123;#index&#125;\n\n跳转到[目录](#index)\n效果就不展示了。。。\n列表无序列表注意空格！！！\n- 无序列表项 一\n- 无序列表项 二\n- 无序列表项 三\n效果：\n\n无序列表项 一\n无序列表项 二\n无序列表项 三有序列表感觉智商有被侮辱到 -.-…1. 有序列表项 一\n2. 有序列表项 二\n3. 有序列表项 三\n效果：\n\n\n有序列表项 一\n有序列表项 二\n有序列表项 三\n\n至于定义型列表。。。个人感觉和这个有序列表一样没必要。不就是代码块中列定义，纯属脱裤子放屁多此一举。\n列表缩进这个可以让列表下方跟第一行缩进一致，效果还挺好看的。\n*   轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。\n那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 \n软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！\n     那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 \n寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 \n但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ \n*    悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。\n\n\n轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！   那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ \n   悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。\n\n大概有用的就是这些，其他的设计代码排版还不如直接截图\n引用普通引用Markdown 允许你只在整个段落的第一行最前面加上 &gt; ，效果如下：\n\n\n\n\n\n\n\n\n\n这是一个有两段文字的引用,无意义的占行文字1.无意义的占行文字2.\n无意义的占行文字3.无意义的占行文字4.\n多层引用&gt;&gt;&gt; 请问 Markdwon 怎么用？ - 小白\n&gt;&gt;&gt;\n&gt;&gt; 自己看教程！ - 愤青\n&gt;&gt;\n&gt; 教程在哪？ - 小白\n&gt;\n\n\n\n\n\n\n\n\n\n\n\n请问 Markdwon 怎么用？ - 小白\n自己看教程！ - 愤青\n\n教程在哪？ - 小白\n\n引用中添加代码&gt; 1.   这是第一行列表项。\n&gt; 2.   这是第二行列表项。\n&gt; \n&gt; 给出一些例子代码：\n&gt; \n&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);\n效果：\n\n\n\n\n\n\n\n\n\n\n  这是第一行列表项。\n  这是第二行列表项。\n\n给出一些例子代码：\nreturn shell_exec(&quot;echo $input | $markdown_script&quot;);\n\n插入图像我只使用行内式，参考式虽然代码看起来清爽一丢丢，但是后期有问题的话维护成本太高。\n![波尔多](https:&#x2F;&#x2F;user-images.githubusercontent.com&#x2F;59725125&#x2F;145532785-07737376-50bd-4754-8fe2-2aa7ed01fa4d.jpg &quot;波尔多&quot;)\n这个时候有一个问题，Markdown只会把图片原尺寸原封不动的展示，无法调节图片大小。幸运的是Markdown可以直接写HTML！！！然后就没问题了是不。\n&lt;p style&#x3D;&quot;text-align:center&quot;&gt;\n&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;user-images.githubusercontent.com&#x2F;59725125&#x2F;145532785-07737376-50bd-4754-8fe2-2aa7ed01fa4d.jpg&quot;  height&#x3D;&quot;330&quot; width&#x3D;&quot;495&quot;&gt;\n&lt;&#x2F;p&gt;\n\n\n\n\n注脚使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。\n\n[^1]:Markdown是一种纯文本标记语言\n[^2]:HyperText Markup Language 超文本标记语言\n[^Le]:开源笔记平台，支持Markdown和笔记直接发为博文\n效果：使用 Markdown^1可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。\n[^2]:HyperText Markup Language 超文本标记语言[^Le]:开源笔记平台，支持Markdown和笔记直接发为博文\nLatex 公式这是我万万没有想到的。有了Latex支持，岂不是数学公式什么的轻轻松松搞定。直接用美元符号$框起来就行，两个美元是整行公式。懂Latex的朋友就知道多简单了。\n质能守恒方程可以用一个很简洁的方程式 $E&#x3D;mc^2$ 来表达。\n$$f(x_1,x_x,\\ldots,x_n) &#x3D; x_1^2 + x_2^2 + \\cdots + x_n^2 $$\n$$\\sum^&#123;j-1&#125;_&#123;k&#x3D;0&#125;&#123;\\widehat&#123;\\gamma&#125;_&#123;kj&#125; z_k&#125;$$\n质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2 $$$$\\sum^{j-1}{k=0}{\\widehat{\\gamma}{kj} z_k}$$\n流程图暂时没找到案例，网上给的以往的代码都实现不了。\nflow\nst&#x3D;&gt;start: Start:&gt;https:&#x2F;&#x2F;www.zybuluo.com\nio&#x3D;&gt;inputoutput: verification\nop&#x3D;&gt;operation: Your Operation\ncond&#x3D;&gt;condition: Yes or No?\nsub&#x3D;&gt;subroutine: Your Subroutine\ne&#x3D;&gt;end\nst-&gt;io-&gt;op-&gt;cond\ncond(yes)-&gt;e\ncond(no)-&gt;sub-&gt;io\n\n如果有人知道怎么做，欢迎留言板告诉我哟~\n表格|学号|姓名|分数|\n|-|-|-|\n|小明|男|75|\n|小红|女|79|\n|小陆|男|92|\n\n\n\n\n学号\n姓名\n分数\n\n\n\n小明\n男\n75\n\n\n小红\n女\n79\n\n\n小陆\n男\n92\n\n\n","slug":"Markdown","date":"2021-12-10T07:39:10.000Z","categories_index":"Web development","tags_index":"Markdown","author_index":"Quanito"},{"id":"a8b91d116b5192895cd66fd06258d860","title":"Markdown容器使用手册","content":"\n\n\n此图摄于法国国庆节当日晚，波尔多水镜广场烟花晚会时。\n\nIt’s my first time to build a personal blog site.The purpose of this blog is for me to refer to how this system is used.\nMarkdown自定义容器:::[type] [title]\n文本内容\n:::\n\nTip 容器:::tip\nNormal Tips Container\n:::\n\n\n\n\n\n\n\n提示\nNormal Tips Container\n\n:::tip Custom header\n\nCustom header\n\n- tips content\n- tips new line\n\n:::\n\n\n\n\n\n\nCustom header\nCustom header\n\ntips content\ntips new line\n\n\n\nWarning 容器:::warning\nWarning!!!\n:::\n\n\n\n\n\n\n\n\n注意\nWarning!!!\n\nDanger 容器:::danger\nDanger!!!\n:::\n\n\n\n\n\n\n\n特别注意\nDanger!!!\n\nDetails 容器:::details Click to see more\n\nFusce rutrum venenatis eros in hendrerit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam eget risus egestas, aliquet ipsum sed, volutpat tortor. Proin finibus tortor ac mauris finibus rutrum. Nullam tincidunt arcu eu urna ullamcorper, eu ultricies turpis ornare. Morbi id sollicitudin orci. Proin lobortis vehicula nibh a ornare. Cras sodales eu ligula quis fermentum. Proin eu ultrices leo, quis iaculis justo. Sed dictum, nulla sit amet imperdiet commodo, libero sapien semper justo, ut lobortis elit nunc vitae ante. Nullam lobortis odio quam, ac condimentum elit posuere vitae. Sed ornare, odio et rutrum varius, lorem eros gravida urna, in pharetra sapien justo non magna.\n\n- details content\n- details new line\nconsole.log(&#39;hello world&#39;)\n:::\n\nClick to see more\nFusce rutrum venenatis eros in hendrerit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam eget risus egestas, aliquet ipsum sed, volutpat tortor. Proin finibus tortor ac mauris finibus rutrum. Nullam tincidunt arcu eu urna ullamcorper, eu ultricies turpis ornare. Morbi id sollicitudin orci. Proin lobortis vehicula nibh a ornare. Cras sodales eu ligula quis fermentum. Proin eu ultrices leo, quis iaculis justo. Sed dictum, nulla sit amet imperdiet commodo, libero sapien semper justo, ut lobortis elit nunc vitae ante. Nullam lobortis odio quam, ac condimentum elit posuere vitae. Sed ornare, odio et rutrum varius, lorem eros gravida urna, in pharetra sapien justo non magna.\n\ndetails content\ndetails new line\n\nconsole.log(&#39;hello world&#39;)\n\n\n\n","slug":"helloworldquan","date":"2021-12-07T09:38:01.000Z","categories_index":"Web development","tags_index":"Markdown,Container,容器","author_index":"Quanito"},{"id":"f0813c08952e580ef1165604bee18e32","title":"Hexo Quick start","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2021-12-07T08:19:24.603Z","categories_index":"Web development","tags_index":"Hexo","author_index":"Quanito"}]