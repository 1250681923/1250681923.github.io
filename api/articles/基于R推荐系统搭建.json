{"title":"基于R推荐系统搭建","uid":"53b940f6ea7d5afb2d81c3c681083d3b","slug":"基于R推荐系统搭建","date":"2021-12-15T08:12:39.000Z","updated":"2021-12-15T10:03:09.451Z","comments":true,"path":"api/articles/基于R推荐系统搭建.json","keywords":null,"cover":"/img/基于R推荐系统搭建.jpg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>首先，R语言牛皮之处就不过多阐述，总之很方便很方便。R语言就是为了数据处理而生的，可以轻松链接数据库，可以轻松对数据进行处理和分析。</p>\n<p>这篇博客主要归纳一下如何使用R语言搭建一个简单的推荐系统。首先导入包：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#install.packages(&quot;RJDBC&quot;) 如果第一次使用，要下载所需要的包，然后使用。\nlibrary(RJDBC)\n#以下是一些画图使用的包，还有一些机器学习算法。\nlibrary(rvest)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(scales)\nlibrary(maps)\nlibrary(mapproj)\nlibrary(plotly)\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(C50)\nlibrary(tree)\nlibrary(ROCR)\nlibrary(randomForest)\nlibrary(e1071)\nlibrary(naivebayes)\nlibrary(nnet)\nlibrary(kknn)</code></pre>\n<h2 id=\"链接Oracle数据库\"><a href=\"#链接Oracle数据库\" class=\"headerlink\" title=\"链接Oracle数据库\"></a>链接Oracle数据库</h2><p>如果有小伙伴想复现这个项目，可以直接去我的github下载csv数据文件，用R导入csv数据也是一样的效果(Imm..表只给出了前几百条数据，因为数据文件太大，无法上传仓库)：</p>\n<p><a href=\"https://github.com/1250681923/DataAnalyseMBDS.git\">项目仓库</a></p>\n<p>虽然有些公司可能节约成本选择使用Mysql，但是学习Oracle还是非常有必要的。在顶端DBA大师眼中，能在PDB中进行协作的Oracle有着无可取代的天然优势。更别提我们可以通过Hive工具创建Oracle内外表后使用Oracle sql, Oracle Nosql, Hadoop HDFS, MongDB搭建数据湖。这对企业的大数据架构的整合有着巨大的价值。</p>\n<p>在此之前需要下载jdbc的jar包：<a href=\"https://github.com/1250681923/picture.git\">点击链接进行下载drives文件</a></p>\n<p>链接配置规则： </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">conn&lt;-dbConnect(drv,“jdbc:oracle:thin:@主机IP:1521:数据库名称”,“用户名称”,“密码”)</code></pre>\n<p>远程链接：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">drv &lt;- RJDBC::JDBC(driverClass &#x3D; &quot;oracle.jdbc.OracleDriver&quot;, classPath &#x3D;  Sys.glob(&quot;C:&#x2F;Users&#x2F;12506&#x2F;OneDrive&#x2F;Desktop&#x2F;ESTIA3A&#x2F;R&#x2F;Oracle&#x2F;drivers&#x2F;*&quot;))\n\nconn &lt;- dbConnect(drv, &quot;jdbc:oracle:thin:@(DESCRIPTION&#x3D;(ADDRESS&#x3D;(PROTOCOL&#x3D;TCP)(HOST&#x3D;144.21.67.201)(PORT&#x3D;1521))(CONNECT_DATA&#x3D;(SERVICE_NAME&#x3D;pdbest21.631174089.oraclecloud.internal)))&quot;, &quot;ZHANG2B20&quot;, &quot;ZHANG2B2001&quot;)\n\nallTables &lt;- dbGetQuery(conn, &quot;SELECT owner, table_name FROM all_tables where owner &#x3D; &#39;ZHANG2B20&#39;&quot;)</code></pre>\n<p>本地链接(我没有试过，你们可以参考如下例子)：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">drv&lt;-JDBC(&quot;oracle.jdbc.driver.OracleDriver&quot;,&quot;ojdbc6_g.jar&quot;, identifier.quote&#x3D;&quot;\\&quot;&quot;)  ##java中JDBC的套路\nconn&lt;-dbConnect(drv,&quot;jdbc:oracle:thin:@10.0.0.214:1521:zlhis&quot;,&quot;zlhis1234&quot;,&quot;his123&quot;) ##建立一个连接\nEMP&lt;-dbReadTable(conn,&#39;EMP&#39;) ##根据连接和表名获取Oracle中的表\ntable1&lt;-dbGetQuery(conn,&quot;select * from user_tables&quot;)  ##根据sql记录获取Oracle中表的数据\n————————————————\n版权声明：本文为CSDN博主「dltan」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https:&#x2F;&#x2F;blog.csdn.net&#x2F;tandelin&#x2F;article&#x2F;details&#x2F;99300248</code></pre>\n<p>如果数据有乱码：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">names(table1)&#x3D;iconv(names(table1),&quot;UTF-8&quot;,&quot;GBK&quot;) ##若是表中列名为中文，读取时出现乱码，可用这句来搞定乱码情况</code></pre>\n\n<p>所以按着我的例子来吧~ </p>\n<p>接下来介绍下数据：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tableCatalogue &lt;- dbGetQuery(conn, &quot;select * from Catalogue&quot;)\ntableClients &lt;- dbGetQuery(conn, &quot;select * from Clients&quot;)\ntableIm &lt;- dbGetQuery(conn, &quot;select * from IMMATRICULATION&quot;)\ntableMar &lt;- dbGetQuery(conn, &quot;select * from MARKETING&quot;)\nView(tableCatalogue)\nView(tableClients)\nView(tableIm)\nView(tableMar)</code></pre>\n<p>一共有四个表:</p>\n<ul>\n<li>Catalogue 记录着一共270种汽车型号，不同的颜色，品牌，马力等等。</li>\n<li>Client 记录着以往的购买记录，客户的信息对应所购买的车牌号。</li>\n<li>Immatriculation 记录着车牌号对应的汽车信息，这些汽车的种类包含于上述270种。</li>\n<li>Marketing 9个新客户，为他们提供一个车型的推荐，最终交付成果是给他们<br><img src=\"https://user-images.githubusercontent.com/59725125/146154033-65c3fcb0-6f36-4354-b64c-dbccde7a8a58.png\" alt=\"10\"></li>\n</ul>\n<h2 id=\"确定标签\"><a href=\"#确定标签\" class=\"headerlink\" title=\"确定标签\"></a>确定标签</h2><p>以下举一个例子，就好比我们要探究客户的特征和购买车辆的价格的关系。</p>\n<p>因为Client表只记录了客户的信息对应所购买的车牌号（车管所数据）。我们需要融合Client和Catalogue两个表，就能把标签-价格和客户的特征放在同一个表中：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tableIm_f &lt;- merge(tableIm, tableCatalogue, by &#x3D; c(&quot;MARQUE&quot;,&quot;NOM&quot;, &quot;PUISSANCE&quot;, &quot;LONGUEUR&quot;, &quot;NBPORTES&quot;,&quot;COULEUR&quot;,&quot;OCCASION&quot;,&quot;PRIX&quot;))\nsummary(tableIm_f)\ntableImPrix &lt;- tableIm_f[c(8, 9)]\ntablePrixFinal &lt;- merge(tableClients, tableImPrix, by &#x3D; &quot;IMMATRICULATION&quot;, incomparables &#x3D; NA)</code></pre>\n<p>(未完待续。。。)</p>\n","text":"前言首先，R语言牛皮之处就不过多阐述，总之很方便很方便。R语言就是为了数据处理而生的，可以轻松链接数据库，可以轻松对数据进行处理和分析。 这篇博客主要归纳一下如何使用R语言搭建一个简单的推荐系统。首先导入包： #install.packages(&quot;RJDBC&quot;...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"R语言数据分析","slug":"R语言数据分析","count":1,"path":"api/categories/R语言数据分析.json"}],"tags":[{"name":"R语言","slug":"R语言","count":1,"path":"api/tags/R语言.json"},{"name":"机器学习","slug":"机器学习","count":1,"path":"api/tags/机器学习.json"},{"name":"推荐系统","slug":"推荐系统","count":1,"path":"api/tags/推荐系统.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%93%BE%E6%8E%A5Oracle%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">链接Oracle数据库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A1%AE%E5%AE%9A%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">确定标签</span></a></li></ol>","author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curious hunter","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}},"mapped":true,"prev_post":{"title":"简介","uid":"e3b28e08d06ce54864d09189bebacd02","slug":"BI商业大数据分析平台搭建","date":"2021-12-19T15:54:39.000Z","updated":"2021-12-24T13:00:03.074Z","comments":true,"path":"api/articles/BI商业大数据分析平台搭建.json","keywords":null,"cover":"/img/简介.jpg","text":"这一分类为一个完整的项目。我要学习一步步搭建一个BI商业大数据分析平台。 数据库管理系统MySQL首先复习加强化SQL，学习使用MySQL图形化开发工具-DataGrip 可视化ETL工具Kettle学习Kettle开发，重点在于文本输入与Excel输出，Excel输入与MySQ...","link":"","photos":[],"count_time":{"symbolsCount":189,"symbolsTime":"1 mins."},"categories":[{"name":"BI商业大数据分析平台搭建","slug":"BI商业大数据分析平台搭建","count":4,"path":"api/categories/BI商业大数据分析平台搭建.json"}],"tags":[{"name":"大数据分析","slug":"大数据分析","count":4,"path":"api/tags/大数据分析.json"},{"name":"BI平台","slug":"BI平台","count":4,"path":"api/tags/BI平台.json"}],"author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curious hunter","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}}},"next_post":{"title":"公交系统线路动图","uid":"e46e4f822f7f4d970d27f487afc0732f","slug":"公交系统线路动图","date":"2021-12-15T04:06:27.000Z","updated":"2021-12-15T04:24:55.821Z","comments":true,"path":"api/articles/公交系统线路动图.json","keywords":null,"cover":"/img/公交系统.jpg","text":"关于调用百度API，能做的事情不仅仅这一个。可以随心所欲绘制自己想要的效果。 调用百度API首先来这里注册一个秘钥 百度地图开放平台 然后在控制台依次点击控制台-应用管理-我的应用-创建应用 创建一个浏览器端应用。复制生成的AK 如果是服务端，可以在cmd中输入ipconfig/...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Python数据分析","slug":"Python数据分析","count":4,"path":"api/categories/Python数据分析.json"}],"tags":[{"name":"公交路线","slug":"公交路线","count":1,"path":"api/tags/公交路线.json"},{"name":"百度Api","slug":"百度Api","count":1,"path":"api/tags/百度Api.json"}],"author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curious hunter","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}}}}