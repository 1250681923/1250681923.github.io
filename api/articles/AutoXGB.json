{"title":"AutoXGB(XGboost + optuna)","uid":"41e8b66af73631eb10964784b17cc5fa","slug":"AutoXGB","date":"2023-02-09T10:23:39.000Z","updated":"2024-11-06T02:24:29.761Z","comments":true,"path":"api/articles/AutoXGB.json","keywords":null,"cover":"/img/ai.jpg","content":"<h2 id=\"简介-Introduction\"><a href=\"#简介-Introduction\" class=\"headerlink\" title=\"简介 Introduction\"></a>简介 Introduction</h2><p><a href=\"https://github.com/abhishekkrthakur/autoxgb.git\">源代码地址（Source code url）</a></p>\n<p>XGBoost + Optuna: no brainer</p>\n<ul>\n<li>auto train xgboost directly from CSV files</li>\n<li>auto tune xgboost using optuna </li>\n<li>auto serve best xgboost model using fastapi</li>\n</ul>\n<p>AutoXGB是XGBoost和Optuna的结合，允许</p>\n<ul>\n<li>在CSV文件上自动训练xgboost模型</li>\n<li>对xgboost使用optuna自动参数调优</li>\n<li>使用fastapi提供最优xgboost模型</li>\n</ul>\n<h2 id=\"安装方法-Installation\"><a href=\"#安装方法-Installation\" class=\"headerlink\" title=\"安装方法 Installation\"></a>安装方法 Installation</h2><p>使用pip进行安装<br>Install using pip</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">pip install autoxgb</code></pre>\n\n<h2 id=\"使用-Usage\"><a href=\"#使用-Usage\" class=\"headerlink\" title=\"使用 Usage\"></a>使用 Usage</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from autoxgb import AutoXGB</code></pre>\n\n<h2 id=\"参数-Parameters\"><a href=\"#参数-Parameters\" class=\"headerlink\" title=\"参数 Parameters\"></a>参数 Parameters</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">###############################################################################\n### required parameters\n###############################################################################\n\n# path to training data\ntrain_filename &#x3D; &quot;data_samples&#x2F;binary_classification.csv&quot;\n\n# The path on my Colab\n# train_filename &#x3D; &quot;&#x2F;content&#x2F;drive&#x2F;MyDrive&#x2F;Colab Notebooks&#x2F;data_samples&#x2F;binary_classification.csv&quot;\n\n\n# path to output folder to store artifacts\noutput &#x3D; &quot;output&quot;\n\n###############################################################################\n### optional parameters\n###############################################################################\n\n# path to test data. if specified, the model will be evaluated on the test data\n# and test_predictions.csv will be saved to the output folder\n# if not specified, only OOF predictions will be saved\n# test_filename &#x3D; &quot;test.csv&quot;\ntest_filename &#x3D; None\n\n# task: classification or regression\n# if not specified, the task will be inferred automatically\n# task &#x3D; &quot;classification&quot;\n# task &#x3D; &quot;regression&quot;\ntask &#x3D; None\n\n# an id column\n# if not specified, the id column will be generated automatically with the name &#96;id&#96;\n# idx &#x3D; &quot;id&quot;\nidx &#x3D; None\n\n# target columns are list of strings\n# if not specified, the target column be assumed to be named &#96;target&#96;\n# and the problem will be treated as one of: binary classification, multiclass classification,\n# or single column regression\n# targets &#x3D; [&quot;target&quot;]\n# targets &#x3D; [&quot;target1&quot;, &quot;target2&quot;]\ntargets &#x3D; [&quot;income&quot;]\n\n# features columns are list of strings\n# if not specified, all columns except &#96;id&#96;, &#96;targets&#96; &amp; &#96;kfold&#96; columns will be used\n# features &#x3D; [&quot;col1&quot;, &quot;col2&quot;]\nfeatures &#x3D; None\n\n# categorical_features are list of strings\n# if not specified, categorical columns will be inferred automatically\n# categorical_features &#x3D; [&quot;col1&quot;, &quot;col2&quot;]\ncategorical_features &#x3D; None\n\n# use_gpu is boolean\n# if not specified, GPU is not used\n# use_gpu &#x3D; True\n# use_gpu &#x3D; False\nuse_gpu &#x3D; True\n\n# number of folds to use for cross-validation\n# default is 5\nnum_folds &#x3D; 5\n\n# random seed for reproducibility\n# default is 42\nseed &#x3D; 42\n\n# number of optuna trials to run\n# default is 1000\n# num_trials &#x3D; 1000\nnum_trials &#x3D; 100\n\n# time_limit for optuna trials in seconds\n# if not specified, timeout is not set and all trials are run\n# time_limit &#x3D; None\ntime_limit &#x3D; 360\n\n# if fast is set to True, the hyperparameter tuning will use only one fold\n# however, the model will be trained on all folds in the end\n# to generate OOF predictions and test predictions\n# default is False\n# fast &#x3D; False\nfast &#x3D; False</code></pre>\n\n<h2 id=\"用python-API训练\"><a href=\"#用python-API训练\" class=\"headerlink\" title=\"用python API训练\"></a>用python API训练</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># Now its time to train the model!\naxgb &#x3D; AutoXGB(\n    train_filename&#x3D;train_filename,\n    output&#x3D;output,\n    test_filename&#x3D;test_filename,\n    task&#x3D;task,\n    idx&#x3D;idx,\n    targets&#x3D;targets,\n    features&#x3D;features,\n    categorical_features&#x3D;categorical_features,\n    use_gpu&#x3D;use_gpu,\n    num_folds&#x3D;num_folds,\n    seed&#x3D;seed,\n    num_trials&#x3D;num_trials,\n    time_limit&#x3D;time_limit,\n    fast&#x3D;fast,\n)\naxgb.train()</code></pre>\n\n<h2 id=\"用CLI训练\"><a href=\"#用CLI训练\" class=\"headerlink\" title=\"用CLI训练\"></a>用CLI训练</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># Train the model using the autoxgb train command. The parameters are same as above.\nautoxgb train \\\n --train_filename datasets&#x2F;30train.csv \\\n --output outputs&#x2F;30days \\\n --test_filename datasets&#x2F;30test.csv \\\n --use_gpu</code></pre>\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># You can also serve the trained model using the autoxgb serve command.\nautoxgb serve --model_path outputs&#x2F;mll --host 0.0.0.0 --debug</code></pre>\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&#96;autoxgb &lt;command&gt; --help&#96; </code></pre>\n\n<h2 id=\"训练过程-Training-Process\"><a href=\"#训练过程-Training-Process\" class=\"headerlink\" title=\"训练过程 Training Process\"></a>训练过程 Training Process</h2><p><img src=\"/img/image-20230209190221610.png\" alt=\"image-20230209190221610\"></p>\n","text":"简介 Introduction源代码地址（Source code url） XGBoost + Optuna: no brainer auto train xgboost directly from CSV files auto tune xgboost using optuna...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"机器学习Machine Learning","slug":"机器学习Machine-Learning","count":3,"path":"api/categories/机器学习Machine-Learning.json"}],"tags":[{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"},{"name":"机器学习","slug":"机器学习","count":3,"path":"api/tags/机器学习.json"},{"name":"推荐系统","slug":"推荐系统","count":3,"path":"api/tags/推荐系统.json"},{"name":"XGBoost","slug":"XGBoost","count":2,"path":"api/tags/XGBoost.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-Introduction\"><span class=\"toc-text\">简介 Introduction</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95-Installation\"><span class=\"toc-text\">安装方法 Installation</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-Usage\"><span class=\"toc-text\">使用 Usage</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E6%95%B0-Parameters\"><span class=\"toc-text\">参数 Parameters</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%A8python-API%E8%AE%AD%E7%BB%83\"><span class=\"toc-text\">用python API训练</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%A8CLI%E8%AE%AD%E7%BB%83\"><span class=\"toc-text\">用CLI训练</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%AD%E7%BB%83%E8%BF%87%E7%A8%8B-Training-Process\"><span class=\"toc-text\">训练过程 Training Process</span></a></li></ol>","author":{"name":"Quanito","slug":"blog-author","avatar":"/staticImg/avatar.jpg","link":"/","description":"大道五十，天衍四十九，人遁其一","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/email.png","link":"mailto:code.quan666zhang@gmail.com"}}}},"mapped":true,"prev_post":{"title":"XGBoost","uid":"4a22d0b29df90690f72b32998c550a24","slug":"XGBoost","date":"2023-02-10T07:21:14.000Z","updated":"2024-11-06T02:24:29.760Z","comments":true,"path":"api/articles/XGBoost.json","keywords":null,"cover":"/img/ai.jpg","text":"XGBoostXGBoost是一个非常高效、应用广泛的GBDT机器学习库，详细信息可参考xgbbostXGBoost提供了高效简洁的python接口，可用于分类、回归任务。在本实验中使用了xgboost的分类接口。 下面是一个股票预测的例子： 所需要的包 Module Requi...","link":"","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"机器学习Machine Learning","slug":"机器学习Machine-Learning","count":3,"path":"api/categories/机器学习Machine-Learning.json"}],"tags":[{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"},{"name":"机器学习","slug":"机器学习","count":3,"path":"api/tags/机器学习.json"},{"name":"推荐系统","slug":"推荐系统","count":3,"path":"api/tags/推荐系统.json"},{"name":"XGBoost","slug":"XGBoost","count":2,"path":"api/tags/XGBoost.json"}],"author":{"name":"Quanito","slug":"blog-author","avatar":"/staticImg/avatar.jpg","link":"/","description":"大道五十，天衍四十九，人遁其一","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/email.png","link":"mailto:code.quan666zhang@gmail.com"}}}},"feature":true},"next_post":{"title":"DLNotes","uid":"939229761d9e9e6b8785ea116cde36b3","slug":"深度学习笔记","date":"2022-08-01T14:10:05.000Z","updated":"2024-11-06T02:24:29.757Z","comments":true,"path":"api/articles/深度学习笔记.json","keywords":null,"cover":"/img/ai.jpg","text":"iris-鸢尾花# 导入相关的库 import seaborn as sns import numpy as np # 机器学习：sklearn from sklearn.model_selection import train_test_split from sklearn.l...","link":"","photos":[],"count_time":{"symbolsCount":"89k","symbolsTime":"1:21"},"categories":[{"name":"Deep Learning","slug":"Deep-Learning","count":2,"path":"api/categories/Deep-Learning.json"}],"tags":[{"name":"深度学习","slug":"深度学习","count":2,"path":"api/tags/深度学习.json"},{"name":"DLNotes分类","slug":"DLNotes分类","count":1,"path":"api/tags/DLNotes分类.json"}],"author":{"name":"Quanito","slug":"blog-author","avatar":"/staticImg/avatar.jpg","link":"/","description":"大道五十，天衍四十九，人遁其一","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/email.png","link":"mailto:code.quan666zhang@gmail.com"}}}}}}