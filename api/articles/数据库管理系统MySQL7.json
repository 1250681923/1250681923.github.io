{"title":"七、多表关系与查询","uid":"4769b9d006bbb144a5d2804ce160cbfc","slug":"数据库管理系统MySQL7","date":"2022-01-29T11:27:15.000Z","updated":"2022-01-29T13:03:57.564Z","comments":true,"path":"api/articles/数据库管理系统MySQL7.json","keywords":null,"cover":"/img/MySQL7.jpg","content":"<h2 id=\"七、多表关系与查询\"><a href=\"#七、多表关系与查询\" class=\"headerlink\" title=\"七、多表关系与查询\"></a>七、多表关系与查询</h2><h3 id=\"1、多表关系\"><a href=\"#1、多表关系\" class=\"headerlink\" title=\"1、多表关系\"></a>1、多表关系</h3><ul>\n<li><p>电商数据库</p>\n<ul>\n<li>用户表<ul>\n<li>用户id、用户名称、用户手机……</li>\n</ul>\n</li>\n<li>商品表<ul>\n<li>商品id、商品名称、商品价格、库存、尺寸……</li>\n</ul>\n</li>\n<li>订单表<ul>\n<li>订单id、用户id、商品id、总金额、支付方式</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>员工数据库</p>\n<ul>\n<li>员工表<ul>\n<li>员工id、员工姓名、员工性别、年龄、部门id……</li>\n</ul>\n</li>\n<li>部门表<ul>\n<li>部门id、部门名称、部门位置、部门领导……</li>\n</ul>\n</li>\n<li>员工和部门之间的关系<ul>\n<li>员工属于某一个部门</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>表与表之间通过某些列来实现关联，表现数据之间的关系</p>\n</li>\n</ul>\n<h3 id=\"2、join\"><a href=\"#2、join\" class=\"headerlink\" title=\"2、join\"></a>2、join</h3><ul>\n<li><p>功能：通过两张表之间关联的列，实现将两张表的列进行合并</p>\n</li>\n<li><p>关键字：A    join B   on  条件</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select 查询的两张表的哪些列  from A表  join  B表  on 关联条件;</code></pre></li>\n<li><p>本质：通过某种列的关系，将两张表的列进行了关联</p>\n</li>\n<li><p>需求1：查询每个商品的名称以及所属分类的名称</p>\n<ul>\n<li><p>分析结果长什么样？</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">商品名称\t\t\t分类名称\n联想\t\t\t\t\t电脑\n……\nweiC 100\t\t\t 吃的</code></pre></li>\n<li><p>问题：商品名称 属于商品表，分类名称属于分类表</p>\n</li>\n<li><p>关系：分类id：categor_id</p>\n</li>\n<li><p>查询</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">--将商品表与分类表通过分类id进行关联，并显示两张表的所有列\nselect\n   a.*,\n   b.*\nfrom\n   product as a join category as b on a.category_id &#x3D; b.category_id;</code></pre>\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select\n  a.pname,\n  b.category_name\nfrom\n  product a join category b on a.category_id &#x3D; b.category_id;</code></pre></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>需求2：统计每个分类名称对应的商品个数</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select\n  b.category_name,\n  count(*) as numb\nfrom\n  product a join category b on a.category_id &#x3D; b.category_id\ngroup by\n  b.category_name;</code></pre></li>\n<li><p>需求3：统计除了吃的分类以外的所有分类的商品个数，并显示个数最多的前三个分类</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select \n   b.category_name,\n   count(*) as numb\nfrom \n   product a join category b on a.category_id &#x3D; b.category_id\nwhere\n   b.category_name !&#x3D; &#39;吃的&#39;\ngroup by\n   b.category_name\norder by\n   numb desc\nlimit 3;</code></pre></li>\n</ul>\n<ul>\n<li><p>分类</p>\n<ul>\n<li><p>inner join：内连接，inner可以省略</p>\n<ul>\n<li>关联条件中，两张表都有这个值，结果就有</li>\n<li>类似于集合中两个集合的交集</li>\n</ul>\n</li>\n<li><p>left outer join：左外连接，outer可以省略</p>\n<ul>\n<li><p>关联条件中，左表中有，结果就有</p>\n</li>\n<li><p>类似于集合中左表的全集</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select\n  a.pname,\n  b.category_name\nfrom\n  product a left join category b on a.category_id &#x3D; b.category_id;</code></pre>\n\n<ul>\n<li>左表是product，右表是category</li>\n<li>如果product表中有一条数据的category_id是c006，而category中没有</li>\n<li>结果有</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>right   outer join：右外连接，outer可以省略</p>\n<ul>\n<li><p>关联条件中，右表中有，结果就有</p>\n</li>\n<li><p>类似于集合中右表的全集</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select\n  a.pname,\n  b.category_name\nfrom\n  product a right join category b on a.category_id &#x3D; b.category_id;</code></pre>\n\n<ul>\n<li>左表是product，右表是category</li>\n<li>如果category表中有一条数据的category_id是c006，而product中没有</li>\n<li>结果有</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>full   join：全连接</p>\n<ul>\n<li>关联条件中，两张表任意一边有，结果就有</li>\n<li>类似于集合中的两张表全集</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3、子查询\"><a href=\"#3、子查询\" class=\"headerlink\" title=\"3、子查询\"></a>3、子查询</h3><ul>\n<li><p>功能：在select语句中嵌套select语句</p>\n</li>\n<li><p>需求1：查询化妆品这个分类对应的所有商品信息</p>\n<ul>\n<li>分析结果长什么样？<ul>\n<li>所有商品信息：product</li>\n</ul>\n</li>\n<li>条件：化妆品这个分类对应的商品<ul>\n<li>化妆品：category</li>\n</ul>\n</li>\n<li>解决：先获取化妆品对应的分类id，然后根据分类id到商品表中查询这个分类id对应的商品</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select category_id from category where category_name &#x3D; &#39;化妆品&#39;;\nselect * from product where category_id &#x3D; &#39;c003&#39;;</code></pre>\n\n<p>|</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from product where category_id &#x3D; (select category_id from category where category_name &#x3D; &#39;化妆品&#39;);</code></pre>\n\n<ul>\n<li>先执行内层的SQL语句</li>\n<li>然后执行外层的SQL语句</li>\n</ul>\n</li>\n<li><p>需求2：查询相宜本草对应的分类的名称</p>\n<ul>\n<li>结果：显示分类的 名称：category</li>\n<li>条件：相宜本草  pname：product</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">--先查询相宜本草对应的分类id\nselect category_id from product where pname &#x3D; &#39;相宜本草&#39;;\n--根据分类id到分类表中查询分类的名称\nselect category_name from category where category_id &#x3D; &#39;c003&#39;;\n|\nselect category_name from category where category_id &#x3D; (select category_id from product where pname &#x3D; &#39;相宜本草&#39;);</code></pre></li>\n<li><p>join与子查询的应用场景</p>\n<ul>\n<li>如果你的查询结果包含多张表的列<ul>\n<li>join</li>\n</ul>\n</li>\n<li>如果你的查询结果只有一张表的列，条件来自于别的表<ul>\n<li>子查询</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","feature":true,"text":"七、多表关系与查询1、多表关系 电商数据库 用户表 用户id、用户名称、用户手机…… 商品表 商品id、商品名称、商品价格、库存、尺寸…… 订单表 订单id、用户id、商品id、总金额、支付方式 员工数据库 员工表 员工id、员工姓名、员工性别、年龄、部门id…… 部门表 部门i...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"BI商业大数据分析平台搭建","slug":"BI商业大数据分析平台搭建","count":10,"path":"api/categories/BI商业大数据分析平台搭建.json"}],"tags":[{"name":"大数据分析","slug":"大数据分析","count":10,"path":"api/tags/大数据分析.json"},{"name":"BI平台","slug":"BI平台","count":10,"path":"api/tags/BI平台.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E4%B8%8E%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">七、多表关系与查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">1、多表关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81join\"><span class=\"toc-text\">2、join</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">3、子查询</span></a></li></ol></li></ol>","author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curious hunter","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}},"mapped":true,"prev_post":{"title":"八、数据仓库与ETL","uid":"ae63bb9988d030e2e4743d747bc5f91b","slug":"可视化ETL工具Kettle1","date":"2022-01-29T11:34:29.000Z","updated":"2022-01-29T12:05:18.887Z","comments":true,"path":"api/articles/可视化ETL工具Kettle1.json","keywords":null,"cover":"/img/Kettle1.jpg","text":"八、数据仓库与ETL1、数据仓库 本质：专门针对于数据存储模型 实现：MySQL、Oracle、Hive…… 应用：专门用于实现将各种各样数据进行统一化规范化的数据存储，为所有数据应用提供数据 数据分析 数据挖掘 用户画像 推荐系统 风控系统 特点 本身不产生数据 本身也不使用数...","link":"","photos":[],"count_time":{"symbolsCount":859,"symbolsTime":"1 mins."},"categories":[{"name":"BI商业大数据分析平台搭建","slug":"BI商业大数据分析平台搭建","count":10,"path":"api/categories/BI商业大数据分析平台搭建.json"}],"tags":[{"name":"大数据分析","slug":"大数据分析","count":10,"path":"api/tags/大数据分析.json"},{"name":"BI平台","slug":"BI平台","count":10,"path":"api/tags/BI平台.json"}],"author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curious hunter","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}},"feature":true},"next_post":{"title":"六、SQL分析之DQL","uid":"d61d2bd2be71b29580f112a36c07b7c7","slug":"数据库管理系统MySQL6","date":"2022-01-29T11:10:35.000Z","updated":"2022-01-29T13:05:08.802Z","comments":true,"path":"api/articles/数据库管理系统MySQL6.json","keywords":null,"cover":"/img/MySQL6.jpg","text":"六、SQL分析之DQL1、准备数据 创建测试数据库 drop database if exists bigdata; create database bigdata; use bigdata; 创建商品表 create table product( pid int, pname ...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"BI商业大数据分析平台搭建","slug":"BI商业大数据分析平台搭建","count":10,"path":"api/categories/BI商业大数据分析平台搭建.json"}],"tags":[{"name":"大数据分析","slug":"大数据分析","count":10,"path":"api/tags/大数据分析.json"},{"name":"BI平台","slug":"BI平台","count":10,"path":"api/tags/BI平台.json"}],"author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curious hunter","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}}}}