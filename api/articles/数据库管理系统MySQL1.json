{"title":"数据库管理系统MySQL与DataGrid","uid":"d0bfc1aaa818ebb08fb0484bcf05c516","slug":"数据库管理系统MySQL1","date":"2021-12-24T13:05:12.000Z","updated":"2022-03-08T14:49:12.044Z","comments":true,"path":"api/articles/数据库管理系统MySQL1.json","keywords":null,"cover":"/img/MySQL1.jpg","content":"<h2 id=\"MySQL的介绍\"><a href=\"#MySQL的介绍\" class=\"headerlink\" title=\"MySQL的介绍\"></a>MySQL的介绍</h2><h3 id=\"1、大数据本质\"><a href=\"#1、大数据本质\" class=\"headerlink\" title=\"1、大数据本质\"></a>1、大数据本质</h3><ul>\n<li>利用大数据的软件工具对大数据进行处理，从数据中挖掘价值</li>\n</ul>\n<h3 id=\"2、数据处理流程\"><a href=\"#2、数据处理流程\" class=\"headerlink\" title=\"2、数据处理流程\"></a>2、数据处理流程</h3><ul>\n<li>数据采集：将产生各种数据进行统一化的存储</li>\n<li>数据存储：将数据存储数据仓库中</li>\n<li>数据处理：使用SQL开发语言开发程序对数据进行处理</li>\n<li>数据应用：将处理好的结果进行应用</li>\n</ul>\n<h3 id=\"3、数据存储及处理\"><a href=\"#3、数据存储及处理\" class=\"headerlink\" title=\"3、数据存储及处理\"></a>3、数据存储及处理</h3><ul>\n<li>存储的形式：文件<ul>\n<li>不能满足企业中对于数据处理需求</li>\n</ul>\n</li>\n<li>工作需求：更加规范的数据存储、处理<ul>\n<li>早期：Excel【表格，聚合统计分析，图表】</li>\n<li>问题<ul>\n<li>Excel能承载的数据量大小：MB<ul>\n<li>实际工作中要处理的数据大小：GB</li>\n</ul>\n</li>\n<li>Excel中提供的功能不能满足对数据处理的需求<ul>\n<li>支持开发不同的功能</li>\n<li>开发的方式不太友好</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>解决<ul>\n<li>数据库管理系统</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4、数据库管理系统\"><a href=\"#4、数据库管理系统\" class=\"headerlink\" title=\"4、数据库管理系统\"></a>4、数据库管理系统</h3><ul>\n<li>功能<ul>\n<li>专门用户数据存储、处理数据的工具</li>\n</ul>\n</li>\n<li>特点<ul>\n<li>承载数据量会更大</li>\n<li>更加规范化</li>\n<li>功能更加全面</li>\n<li>开发接口更加优化：SQL</li>\n</ul>\n</li>\n<li>应用场景<ul>\n<li>网站后台中存储商品信息、订单信息、用户注册 信息</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5、MySQL介绍及概念\"><a href=\"#5、MySQL介绍及概念\" class=\"headerlink\" title=\"5、MySQL介绍及概念\"></a>5、MySQL介绍及概念</h3><ul>\n<li><p>常见的数据库管理系统</p>\n<ul>\n<li>Oracle：Sun公司商业化数据库产品，性能功能是最强大，但是是收费的商业化产品</li>\n<li>SQL Server：微软公司的产品，受Windows局限性比较大 ，市场占有率并不高，收费</li>\n<li>MySQL：Sun公司的社区产品，体积小，速度快，总体使用的成本比较低</li>\n</ul>\n</li>\n<li><p>MySQL的介绍</p>\n<ul>\n<li>典型的市场占有率是最高的数据库管理系统</li>\n<li>在国内非常广泛<ul>\n<li>所有网站后台的存储</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>概念</p>\n<ul>\n<li><p>数据库管理系统</p>\n<ul>\n<li>专门用户存储和处理数据【结构化数据】的工具</li>\n<li>MySQL就是一个数据库管理系统</li>\n</ul>\n</li>\n<li><p>结构化数据</p>\n<ul>\n<li>例如：表格，行和列是固定的</li>\n<li>行和列是固定的结构，就是数据的格式存在一定的规律</li>\n</ul>\n</li>\n<li><p>数据库：MySQL中用于管理和区分数据表的单元</p>\n<ul>\n<li>database</li>\n<li>理解为对数据进行分类存放的划分</li>\n<li>数据库1：存放用户的数据</li>\n<li>数据库2：存放商品的数据</li>\n<li>数据库3：存放订单的数据</li>\n<li>类似于一个Excel文件<ul>\n<li>人事：人事的Excel文件</li>\n<li>财务：财务的Excel文件</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>表格：MySQL中用于在数据库中划分数据的单元</p>\n<ul>\n<li>将数据进行更细的划分</li>\n<li>类似于一个Excel文件中会有多张表<ul>\n<li>人事Excel文件 <ul>\n<li>在职人员信息表</li>\n<li>离职人员信息表</li>\n</ul>\n</li>\n<li>财务Excel文件<ul>\n<li>报销信息表</li>\n<li>收入信息表</li>\n<li>报税信息表</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>数据库管理系统与Excel对比</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Excel</th>\n<th align=\"center\">MySQL</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">一个Excel文件</td>\n<td align=\"center\">一个数据库</td>\n</tr>\n<tr>\n<td align=\"center\">可以有多个Excel的sheet表格</td>\n<td align=\"center\">可以有多张数据表</td>\n</tr>\n<tr>\n<td align=\"center\">表格有行和列</td>\n<td align=\"center\">表格中有行和列</td>\n</tr>\n</tbody></table>\n<ul>\n<li>区别：<ul>\n<li>MySQL功能更加强大</li>\n<li>Excel的开发比较复杂</li>\n<li>MySQL对数据进行处理：SQL</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>MySQL的使用</p>\n<ul>\n<li>SQL：开发语言，实现数据的存储以及分析管理</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"MySQL及DataGrip部署\"><a href=\"#MySQL及DataGrip部署\" class=\"headerlink\" title=\"MySQL及DataGrip部署\"></a>MySQL及DataGrip部署</h2><h3 id=\"1、MySQL安装\"><a href=\"#1、MySQL安装\" class=\"headerlink\" title=\"1、MySQL安装\"></a>1、MySQL安装</h3><ul>\n<li>这个项目采用MySQL8</li>\n<li>或者其他集成环境，cmd中输入<pre class=\"line-numbers language-none\"><code class=\"language-none\">&gt;  cd Mysql路径，通常在bin文件夹中\n&gt;  mysql -u root -p\n&gt;  show databases;</code></pre></li>\n</ul>\n<h3 id=\"2、DataGrip的安装\"><a href=\"#2、DataGrip的安装\" class=\"headerlink\" title=\"2、DataGrip的安装\"></a>2、DataGrip的安装</h3><ul>\n<li>功能：使用图形化界面的方式来操作MySQL，进行数据的管理</li>\n<li>参考DataGrip安装文档实现安装datagrip-2019.1.4</li>\n</ul>\n<h3 id=\"3、DataGrip连接MySQL\"><a href=\"#3、DataGrip连接MySQL\" class=\"headerlink\" title=\"3、DataGrip连接MySQL\"></a>3、DataGrip连接MySQL</h3><ul>\n<li><p>创建一个连接，配置连接MySQL即可</p>\n<ul>\n<li><p>MySQL所在机器的地址和端口</p>\n<ul>\n<li>地址：localhost</li>\n<li>端口：3306</li>\n</ul>\n</li>\n<li><p>MySQL的连接驱动</p>\n<ul>\n<li>下载</li>\n</ul>\n</li>\n<li><p>MySQL用户名和密码</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">用户名：root\n密码：123456</code></pre></li>\n<li><p>MySQL连接地址属性</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">jdbc:mysql:&#x2F;&#x2F;localhost:3306?serverTimezone&#x3D;UTC</code></pre></li>\n</ul>\n</li>\n</ul>\n<p>链接截图：<br><img src=\"https://user-images.githubusercontent.com/59725125/148035309-a68c0fb7-62ae-4dd6-9857-6eafd5502c1c.png\" alt=\"DataGrid链接\"></p>\n<p>配置完之后，就可以在主界面写入sql语句来查看查询结果了~<br><img src=\"https://user-images.githubusercontent.com/59725125/148035757-a0dd76e6-da9e-456e-9c68-d5381c2195a6.png\" alt=\"1641287435\"></p>\n<h2 id=\"SQL介绍及其规则\"><a href=\"#SQL介绍及其规则\" class=\"headerlink\" title=\"SQL介绍及其规则\"></a>SQL介绍及其规则</h2><h3 id=\"1、SQL的介绍\"><a href=\"#1、SQL的介绍\" class=\"headerlink\" title=\"1、SQL的介绍\"></a>1、SQL的介绍</h3><ul>\n<li><p>Struct Qurey Language：结构化查询语言</p>\n</li>\n<li><p>一种编程语言，是一种命令，通过这种命令或者编程语言开发程序来实现数据处理</p>\n<ul>\n<li>MySQL使用SQL命令来管理MySQL中数据</li>\n</ul>\n</li>\n<li><p>SQL是所有RDBMS【关系型数据库管理系统】通用语言</p>\n<ul>\n<li>在语法上有一点点区别</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2、SQL的分类\"><a href=\"#2、SQL的分类\" class=\"headerlink\" title=\"2、SQL的分类\"></a>2、SQL的分类</h3><ul>\n<li><p>MySQL中的SQL根据不同的功能模块划分不同的命令的分类</p>\n</li>\n<li><p>DDL：数据定义语言</p>\n<ul>\n<li>如何管理我们的数据库和表</li>\n<li>数据库的管理：创建、删除、切换<ul>\n<li>学生信息数据库</li>\n</ul>\n</li>\n<li>表的管理：创建、删除、清空、描述<ul>\n<li>学生表</li>\n<li>成绩表</li>\n<li>学籍表</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DML：数据操作语言</p>\n<ul>\n<li>如何管理表中的数据</li>\n<li>对表中数据实现以下功能<ul>\n<li>插入：insert</li>\n<li>更改：update</li>\n<li>删除：delete</li>\n</ul>\n</li>\n<li>例如<ul>\n<li>录入学生信息</li>\n<li>更改学生信息</li>\n<li>删除学生信息</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DQL：数据查询语言</p>\n<ul>\n<li><p>实现对表中数据的查询和统计分析</p>\n</li>\n<li><p>工作中60%的开发都是开发SQL，有90%都是在开发DQL</p>\n</li>\n<li><p>select</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3、SQL的规则\"><a href=\"#3、SQL的规则\" class=\"headerlink\" title=\"3、SQL的规则\"></a>3、SQL的规则</h3><ul>\n<li><p>所有的SQL语句都需要以分号来作为结束符，表示这条命令结束了，可以提交运行</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">show databases;\nshow tables;\nselect * from mysql.user;</code></pre></li>\n</ul>\n<h2 id=\"SQL分析之DDL\"><a href=\"#SQL分析之DDL\" class=\"headerlink\" title=\"SQL分析之DDL\"></a>SQL分析之DDL</h2><h3 id=\"1、数据库管理\"><a href=\"#1、数据库管理\" class=\"headerlink\" title=\"1、数据库管理\"></a>1、数据库管理</h3><ul>\n<li><p>创建</p>\n<ul>\n<li><p>功能：构建一个新的数据库</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create database [ if not exists ] 数据库的名字;</code></pre></li>\n<li><p>测试</p>\n<ul>\n<li><p>创建一个新的数据库叫做：itcast01</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create database itcast01;</code></pre></li>\n<li><p>创建一个新的数据库：itcast02</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create database if not exists itcast02;</code></pre></li>\n<li><p>if not exists：如果不存在的情况下，就创建，如果已经存在就不会创建</p>\n<ul>\n<li><p>功能：为了避免程序报错</p>\n</li>\n<li><p>如果不加：数据库已存在，就会报错</p>\n</li>\n<li><p>如果加了：数据库已存在，不会报错</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>列举</p>\n<ul>\n<li><p>功能：用于列举当前MySQL中所有的数据库名称</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">show  databases;</code></pre></li>\n</ul>\n</li>\n<li><p>查看</p>\n<ul>\n<li><p>功能：查看当前所在的数据库</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select database();</code></pre>\n\n<ul>\n<li>null表示我们当前不在任何一个数据库中</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>切换</p>\n<ul>\n<li><p>功能：切换到某个数据库中</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">use 数据库名称;</code></pre>\n</li>\n</ul>\n</li>\n<li><p>删除</p>\n<ul>\n<li><p>功能：删除已存在的一个数据库</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">drop database [ if exists ] 数据库名称;</code></pre>\n\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2、数据表管理\"><a href=\"#2、数据表管理\" class=\"headerlink\" title=\"2、数据表管理\"></a>2、数据表管理</h3><ul>\n<li><p>数据类型</p>\n<ul>\n<li><p>定义：用于描述表中列的一个数据格式</p>\n</li>\n<li><p>类型：</p>\n<ul>\n<li><p>字符类型：中文、英文或者比较长的数字、日期都可以使用字符串来存储</p>\n<ul>\n<li><p>字符类型是万能的类型</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;a&#39;：这就是一个字符，一个数字、一个英文字母、一个符号\n&#39;abc,12344&#39;：这就是一个字符串，很多个字符构成一个整体</code></pre>\n\n<ul>\n<li>字符串表示的数字是不能参与计算的</li>\n</ul>\n</li>\n<li><p>==只要是字符类型，就使用varchar（N）==</p>\n<ul>\n<li>N表示字符串的长度，只能大不能小</li>\n<li>手机号码：varchar（11）<ul>\n<li>varchar（20）：可以</li>\n<li>varchar(10)：不可以</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>数字类型</p>\n<ul>\n<li>整数<ul>\n<li>整形：int</li>\n<li>==只要是整数就用：int==</li>\n</ul>\n</li>\n<li>小数<ul>\n<li>单精度：float</li>\n<li>双精度：double</li>\n<li>==只要是小数就用：double==</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>日期类型</p>\n<ul>\n<li>日期是一种特殊的格式</li>\n<li>==date：用于存储年月日==<ul>\n<li>yyyy-MM-dd</li>\n<li>2020-01-01</li>\n</ul>\n</li>\n<li>==datetime：用于存储年月日，时分秒==<ul>\n<li>yyyy-MM-dd HH:mm:ss</li>\n<li>2020-01-01 12:30:50</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>创建</p>\n<ul>\n<li><p>功能：在某个数据库中创建一张，定义表的结构【表中哪些列以及每一列的类型】</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create table [if not exists] [数据库名称.]表的名称(\n   col1 type1,\n   col2 type2,\n   col3 type3,\n   ……\n   colN typeN\n);</code></pre>\n\n<ul>\n<li>注意事项<ul>\n<li>所有的符号都是英文的，不允许出现中文符号</li>\n<li>除了最后一行就是结尾括号的前一号不用加逗号，其他的都要加逗号</li>\n<li>每一列都要指定对应的类型<ul>\n<li>字符串：varchar(N)</li>\n<li>整数：int</li>\n<li>小数：double</li>\n<li>年月日日期：date</li>\n<li>年月日时分秒：datetime</li>\n</ul>\n</li>\n<li>如果不加数据库名称，表示在当前数据库中创建表</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>测试</p>\n<ul>\n<li><p>创建一张学生表student：学生学号、学生姓名、学生年龄、学生性别</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create table if not exists student(\n   stuid varchar(10),\n   stuname varchar(10),\n   age int,\n   sex varchar(2)\n);</code></pre></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>列举</p>\n<ul>\n<li><p>功能：列举当前数据库中所有的表</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">show tables;</code></pre></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>描述</p>\n<ul>\n<li><p>功能：查看一张表的详细的结构信息</p>\n</li>\n<li><p>语法：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">desc  [dbname.]tbname;</code></pre></li>\n<li><p>测试</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">desc student;\ndesc bigdata.student;</code></pre></li>\n</ul>\n</li>\n<li><p>删除</p>\n<ul>\n<li><p>功能：删除一张不需要再使用的表</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">drop table [ if exists ] [dbname.]tbname;</code></pre></li>\n<li><p>测试</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">drop table if exists student;</code></pre></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"SQL分析之DML\"><a href=\"#SQL分析之DML\" class=\"headerlink\" title=\"SQL分析之DML\"></a>SQL分析之DML</h2><h3 id=\"1、创建表格\"><a href=\"#1、创建表格\" class=\"headerlink\" title=\"1、创建表格\"></a>1、创建表格</h3><ul>\n<li><p>创建一个商品的分类表：category</p>\n<ul>\n<li>分类编号：cid</li>\n<li>分类名称：cname</li>\n</ul>\n</li>\n<li><p>创建语句</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create table category(\n  cid varchar(5),\n  cname varchar(10)\n);</code></pre></li>\n</ul>\n<h3 id=\"2、插入数据\"><a href=\"#2、插入数据\" class=\"headerlink\" title=\"2、插入数据\"></a>2、插入数据</h3><ul>\n<li><p>功能：写入一条数据进入数据表</p>\n</li>\n<li><p>关键字：insert</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">insert into tbname(co11,col2,col3……)  values(value1,value2,value3……);</code></pre></li>\n<li><p>测试</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">insert into category(cid,cname) values(&#39;c001&#39;,&#39;电器&#39;);\ninsert into category(cname) values(&#39;服饰&#39;);\ninsert into category(cid,cname) values(null,&#39;化妆品&#39;);\ninsert into category values(&#39;c002&#39;,&#39;书籍&#39;);\ninsert into category values(null,&#39;蔬菜&#39;);</code></pre></li>\n</ul>\n<ul>\n<li><p>查询某张表的所有内容</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from category;</code></pre></li>\n<li><p>注意事项</p>\n<ul>\n<li>所给定的列的名称必须与后面的值一一对应</li>\n<li>给定值的时候，除了数值类型或者null，其他类型必须加上单引号</li>\n<li>给定的值不能超过创建表时定义的长度</li>\n<li>如果要给表中的每一列都赋值，就可以不写列名</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3、更新数据\"><a href=\"#3、更新数据\" class=\"headerlink\" title=\"3、更新数据\"></a>3、更新数据</h3><ul>\n<li><p>功能：修改数据表中的数据</p>\n</li>\n<li><p>关键字：update</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">update 表的名称 set col1 &#x3D; newValue,col2 &#x3D; newValue …… [where 条件];</code></pre></li>\n<li><p>测试</p>\n</li>\n</ul>\n<ul>\n<li><p>将服饰的分类id更改为c004</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">update category set cid &#x3D; &#39;c004&#39; where cname &#x3D; &#39;服饰&#39;;</code></pre></li>\n<li><p>将化妆品的分类id更改为c001，并且将分类名称更改为化妆</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">update category set cid&#x3D;&#39;c001&#39;,cname&#x3D;&#39;化妆&#39; where cname &#x3D; &#39;化妆品&#39;;</code></pre></li>\n<li><p>将所有 c003的分类名称更改为笔记本</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">update category set cname &#x3D; &#39;笔记本&#39; where cid &#x3D; &#39;c003&#39;;</code></pre></li>\n<li><p>==注意：==</p>\n<ul>\n<li>更改的列的新的值必须与列的类型相符</li>\n<li>新的值不能超过这一列的长度</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4、删除数据\"><a href=\"#4、删除数据\" class=\"headerlink\" title=\"4、删除数据\"></a>4、删除数据</h3><ul>\n<li><p>功能：删除数据表中的数据</p>\n</li>\n<li><p>关键字：delete</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">delete from 表的名称  [where 条件];</code></pre>\n\n<ul>\n<li><p>如果不加where条件，会删除整张表所有的数据</p>\n</li>\n<li><p>where 条件：符合条件的数据将会被删除</p>\n</li>\n<li><p>需求1：删除所有分类名称为笔记本的分类数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">delete from category where cname &#x3D; &#39;笔记本&#39;;</code></pre></li>\n<li><p>需求2：删除分类id不为c001的分类的数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">delete from category where cid !&#x3D; &#39;c001&#39;;</code></pre></li>\n</ul>\n</li>\n<li><p>清空表中所有的数据</p>\n<ul>\n<li><p>delete：用于删除表中的数据，一行一行删除</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">delete from category;</code></pre></li>\n<li><p>truncate：用于清空整张表的数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">truncate category;</code></pre></li>\n<li><p>区别</p>\n<ul>\n<li>delete：DML命令，一条一条删除</li>\n<li>truncate：DDL命令，类似于将整张表删除，然后重新创建一张一样的空表</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"SQL分析之DQL\"><a href=\"#SQL分析之DQL\" class=\"headerlink\" title=\"SQL分析之DQL\"></a>SQL分析之DQL</h2><h3 id=\"1、准备数据\"><a href=\"#1、准备数据\" class=\"headerlink\" title=\"1、准备数据\"></a>1、准备数据</h3><ul>\n<li><p>创建测试数据库</p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">drop database if exists bigdata;\ncreate database bigdata;\nuse bigdata;</code></pre></li>\n<li><p>创建商品表</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create table product(\n pid int,\n pname varchar(20),\n price double,\n category_id varchar(32)\n);</code></pre></li>\n<li><p>插入商品测试数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">INSERT INTO product(pid,pname,price,category_id) VALUES(1,&#39;联想&#39;,5000,&#39;c001&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(2,&#39;海尔&#39;,3000,&#39;c001&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(3,&#39;雷神&#39;,5000,&#39;c001&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(4,&#39;杰克琼斯&#39;,800,&#39;c002&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(5,&#39;真维斯&#39;,200,&#39;c002&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(6,&#39;花花公子&#39;,440,&#39;c002&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(7,&#39;劲霸&#39;,2000,&#39;c002&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(8,&#39;香奈儿&#39;,800,&#39;c003&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(9,&#39;相宜本草&#39;,200,&#39;c003&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(10,&#39;面霸&#39;,5,&#39;c003&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(11,&#39;好想你枣&#39;,56,&#39;c004&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(12,&#39;香飘飘奶茶&#39;,1,&#39;c005&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(13,&#39;海澜之家&#39;,1,&#39;c002&#39;);</code></pre></li>\n<li><p>创建商品分类类：categroy</p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">create table category(\n  category_id varchar(10),\n  category_name varchar(100)\n);</code></pre></li>\n<li><p>插入商品分类测试数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">insert into category values(&#39;c001&#39;,&#39;电脑&#39;);\ninsert into category values(&#39;c002&#39;,&#39;服装&#39;);\ninsert into category values(&#39;c003&#39;,&#39;化妆品&#39;);\ninsert into category values(&#39;c004&#39;,&#39;吃的&#39;);\ninsert into category values(&#39;c005&#39;,&#39;喝的&#39;);</code></pre></li>\n</ul>\n<h3 id=\"2、基本语法\"><a href=\"#2、基本语法\" class=\"headerlink\" title=\"2、基本语法\"></a>2、基本语法</h3><ul>\n<li><p>功能：实现对于数据表中的数据的查询、统计分析、处理</p>\n</li>\n<li><p>关键字：select</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">select 1 from 2 where 3 group by 4 having 5 order by 6 limit 7;</code></pre>\n\n<ul>\n<li><p>1：用于决定查询的结果中有哪些列，给定哪些列，结果就会显示这些列</p>\n<ul>\n<li>写列的名字，多列用逗号隔开</li>\n<li>*号代表所有的列</li>\n</ul>\n</li>\n<li><p>2：用于表示查询哪张表，给定表的名字</p>\n</li>\n<li><p>3：条件查询，只有满足条件的数据才会被返回</p>\n<ul>\n<li>不满足条件的数据会被过滤掉，不会在结果中显示</li>\n<li>符合where条件的行才会在结果中显示</li>\n</ul>\n</li>\n<li><p>4：用于实现分组的，将多条数据按照某一列或者多列进行分组，划分到同一组中</p>\n<ul>\n<li>用于实现统计分析</li>\n<li>语法：group by col</li>\n</ul>\n</li>\n<li><p>5：用于实现分组后的条件过滤</p>\n<ul>\n<li>功能类似于where</li>\n<li>满足having后的条件就会出现在结果中</li>\n<li>不满足条件就会被过滤掉</li>\n<li>与where的区别<ul>\n<li>where：分组之前过滤</li>\n<li>having：分组之后过滤</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>6：用于实现将查询的结果按照某一列或者多列进行排序</p>\n<ul>\n<li>order by col  [ asc | desc]</li>\n<li>asc：升序排序</li>\n<li>desc：降序排序</li>\n<li>如果不指定，默认是升序排序</li>\n</ul>\n</li>\n<li><p>7：用于实现分页输出</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3、简单查询\"><a href=\"#3、简单查询\" class=\"headerlink\" title=\"3、简单查询\"></a>3、简单查询</h3><ul>\n<li><p>查询所有的商品信息</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product;</code></pre></li>\n</ul>\n<ul>\n<li><p>查询所有的商品名称和价格</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select pname,price from product;</code></pre></li>\n<li><p>查询所有的商品名称和价格，结果的列的名称分别为商品和价格</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select pname as &#39;商品&#39;, price as &#39;价格&#39; from product;</code></pre>\n\n<ul>\n<li>as：用于给列或者表取别名</li>\n</ul>\n</li>\n<li><p>查询所有商品的价格，并去掉重复价格</p>\n<ul>\n<li><p>查询所有商品价格</p>\n</li>\n<li><p>去掉重复价格</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select distinct price from product;</code></pre></li>\n<li><p>distinct：用于对列值进行去重</p>\n</li>\n</ul>\n</li>\n<li><p>将所有商品的价格+10元显示</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select price as &#39;价格&#39; , price + 10 as &#39;新价格&#39; from product;</code></pre>\n\n<ul>\n<li>直接对数值类型的列进行运算<ul>\n<li>加：+</li>\n<li>减：-</li>\n<li>乘：*</li>\n<li>除：/</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4、条件查询：where\"><a href=\"#4、条件查询：where\" class=\"headerlink\" title=\"4、条件查询：where\"></a>4、条件查询：where</h3><ul>\n<li><p>功能：对于数据行的过滤</p>\n</li>\n<li><p>查询商品名称为“花花公子”的商品所有信息 </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where pname &#x3D; &#39;花花公子&#39;;</code></pre></li>\n<li><p>查询价格为800商品  </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where price &#x3D; 800;</code></pre></li>\n<li><p>查询价格不是800的所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from  product where  price !&#x3D; 800;</code></pre></li>\n<li><p>查询商品价格大于60元的所有商品信息</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where price &gt; 60;</code></pre>\n\n<ul>\n<li><p>等于：=</p>\n</li>\n<li><p>不等于：！=</p>\n</li>\n<li><p>小于：&lt;</p>\n</li>\n<li><p>大于：&gt;</p>\n</li>\n<li><p>小于等于：&lt;=</p>\n</li>\n<li><p>大于等于：&gt;=</p>\n</li>\n</ul>\n</li>\n<li><p>查询商品价格在200到1000之间所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where price &gt;&#x3D; 200 and price &lt;&#x3D; 1000;\nselect * from product where price between 200 and 1000;</code></pre>\n\n<ul>\n<li>and：并列关系，两个条件都要满足</li>\n</ul>\n</li>\n<li><p>查询商品价格是200或800的所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where price &#x3D; 200 or price &#x3D; 800;</code></pre>\n\n<ul>\n<li>or：或者关系，两个条件满足其中一个即可</li>\n</ul>\n</li>\n<li><p>查询含有’霸’字的所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where pname like &#39;%霸%&#39;;</code></pre>\n\n<ul>\n<li>%：任意多个字符</li>\n</ul>\n</li>\n<li><p>查询以’香’开头的所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where pname like &#39;香%&#39;;</code></pre></li>\n<li><p>查询第二个字为’想’的所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from  product where pname like &#39;_想%&#39;;</code></pre>\n\n<ul>\n<li>_：表示一个字符</li>\n</ul>\n</li>\n<li><p>查询没有分类的商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">insert into product values(14,&#39;weiC 100&#39;,9.9,null);\n\nselect * from product where category_id is null;</code></pre></li>\n<li><p>查询有分类的商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where category_id is not null;</code></pre></li>\n</ul>\n<h3 id=\"5、聚合查询\"><a href=\"#5、聚合查询\" class=\"headerlink\" title=\"5、聚合查询\"></a>5、聚合查询</h3><ul>\n<li><p>聚合函数</p>\n<ul>\n<li>函数：MySQL为你定义好的功能，你只要调用这个命令就可以实现聚合功能</li>\n<li>MYSQL默认为我们提供的常见的聚合函数<ul>\n<li>count(colname)：统计某一列的行数，统计个数，null不参与统计</li>\n<li>sum（colname）：计算某一列的所有值的和，只能对数值类型求和，如果不是数值，结果为0</li>\n<li>max（colname）：计算某一列的所有值中的最大值</li>\n<li>min（colname）：计算某一列的所有值中的最小值</li>\n<li>avg（colname）：计算某一列的平均值</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>查询商品的总条数 </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select count(pid) as &#39;总个数&#39; from product;</code></pre></li>\n<li><p>查询价格大于200商品的总条数 </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select count(pid) as &#39;大于200的商品个数&#39; from product where price &gt; 200;</code></pre></li>\n<li><p>查询分类为’c001’的所有商品价格的总和  </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select sum(price) as totalPrice from product where category_id &#x3D; &#39;c001&#39;;</code></pre></li>\n</ul>\n<ul>\n<li><p>查询分类为’c002’所有商品的平均价格 </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select avg(price) as &#39;平均价格&#39; from product where category_id &#x3D; &#39;c002&#39;;</code></pre></li>\n<li><p>查询商品的最大价格和最小价格  </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select max(price) as &#39;最大价格&#39;,min(price) as &#39;最小价格&#39; from product;</code></pre></li>\n</ul>\n<h3 id=\"6、分组查询：gourp-by\"><a href=\"#6、分组查询：gourp-by\" class=\"headerlink\" title=\"6、分组查询：gourp by\"></a>6、分组查询：gourp by</h3><ul>\n<li><p>关键字：group by col …… having</p>\n</li>\n<li><p>功能：按照某些列进行分组，对分组后的数据进行处理，一般都会搭配聚合函数使用</p>\n</li>\n<li><p>统计各个分类商品的个数  </p>\n<ul>\n<li><p>分析过程</p>\n<ul>\n<li><p>结果长什么样？</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">category_id\t\t\t个数\nc001\t\t\t\t3\nc002\t\t\t\t5\nc003\t\t\t\t3\nc004\t\t\t\t2\nc005\t\t\t\t1</code></pre></li>\n<li><p>按照什么分组？</p>\n<ul>\n<li>按照category_id进行分组</li>\n</ul>\n</li>\n<li><p>统计每组商品的个数</p>\n<ul>\n<li>count</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as &#39;个数&#39; from product group by category_id;</code></pre></li>\n<li><p>统计查询每种分类中的商品的最大价格和最小价格</p>\n<ul>\n<li>分析<ul>\n<li>结果长什么样？<ul>\n<li>三列：分类的id        最大价格            最小价格</li>\n</ul>\n</li>\n<li>按照分类的id进行分组</li>\n<li>统计每个分组内部的最大价格和最小价格</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select  \n    category_id,\n    max(price) as maxprice,\n    min(price) as minprice   \nfrom \n    product  \ngroup by \n    category_id;</code></pre></li>\n<li><p>统计各个分类商品的个数,且只显示个数大于1的数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as &#39;个数&#39; from product group by category_id;</code></pre>\n\n<ul>\n<li>需要对分组后的结果再进行行的过滤</li>\n<li>where：实现对数据行的过滤，指定条件<ul>\n<li>这个需求中不能使用where</li>\n<li>因为where会在group by之前执行，而个数是在分组之后才产生的列</li>\n</ul>\n</li>\n<li>having：实现对数据行的过滤，指定条件，写法与where一致<ul>\n<li>用于分组之后结果数据的过滤</li>\n<li>对分组以后的 结果进行过滤</li>\n</ul>\n</li>\n<li>什么时候用where，什么时候用having<ul>\n<li>你要过滤的条件是分组之前就存在的，还是分组以后才产生的</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as &#39;个数&#39; from product group by category_id having count(*) &gt; 1;</code></pre></li>\n</ul>\n<h3 id=\"7、排序查询：order-by\"><a href=\"#7、排序查询：order-by\" class=\"headerlink\" title=\"7、排序查询：order by\"></a>7、排序查询：order by</h3><ul>\n<li><p>关键字：order by col…… 【 asc | desc】</p>\n</li>\n<li><p>功能：将结果按照某些列进行升序或者 降序的排序来显示</p>\n<ul>\n<li>默认是升序</li>\n<li>asc：升序</li>\n<li>desc：降序</li>\n</ul>\n</li>\n<li></li>\n<li><p>查询所有商品的信息，并按照价格降序排序</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product order by  price desc;</code></pre></li>\n<li><p>查询所有商品的信息，并按照价格排序(降序)，如果价格相同，以分类排序(降序)</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product order by price desc,category_id desc;</code></pre></li>\n<li><p>统计各个分类商品的个数 ，并按照个数降序排序</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as &#39;个数&#39; from product group by category_id;</code></pre>\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as &#39;个数&#39; from product group by category_id order by count(*) desc;</code></pre></li>\n</ul>\n<h3 id=\"8、分页查询：limit\"><a href=\"#8、分页查询：limit\" class=\"headerlink\" title=\"8、分页查询：limit\"></a>8、分页查询：limit</h3><ul>\n<li><p>关键字：limit</p>\n</li>\n<li><p>功能：限制输出的结果</p>\n</li>\n<li><p>语法：limit M,N</p>\n<ul>\n<li>M：你想从第M+1条开始显示</li>\n<li>N：显示N条</li>\n<li>显示第一条到第三条<ul>\n<li>M：0</li>\n<li>N：3</li>\n</ul>\n</li>\n<li>显示第9条到第10条<ul>\n<li>M：8</li>\n<li>N：2</li>\n</ul>\n</li>\n<li>如果从第一条开始，M为0，可以省略不写<ul>\n<li>limit N</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>查询product表的前5条记录</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product limit 0,5;\nselect * from product limit 5;</code></pre></li>\n<li><p>查询product表的第4条和第5条记录</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product limit 3,2;</code></pre></li>\n<li><p>查询商品个数最多的分类的前三名</p>\n<ul>\n<li><p>查询所有商品分类的商品个数</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as numb  from product group by category_id;</code></pre></li>\n<li><p>对上一步做排序</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as numb from product group by category_id order by numb desc;</code></pre></li>\n<li><p>limit选择前三名</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as numb from product group by category_id order by numb desc limit 3;</code></pre></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9、结果保存\"><a href=\"#9、结果保存\" class=\"headerlink\" title=\"9、结果保存\"></a>9、结果保存</h3><ul>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">insert into 表的名称   select……</code></pre></li>\n<li><p>功能：将一条select语句运行的结果写入一张表中</p>\n</li>\n<li><p>注意：结果表的列一定要与Select语句的结果的列要匹配</p>\n<ul>\n<li>列的名称可以不一样</li>\n<li>但是列的类型和个数必须一一对应</li>\n</ul>\n</li>\n<li><p>统计各个分类商品的个数 ，并按照个数降序排序，并将结果进行保存</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select\n  category_id,\n  count(*) as numb\nfrom\n  product\ngroup by\n  category_id\norder by\n  numb desc;</code></pre>\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">--创建一张表用于存储分析的结果\ncreate table result (\n  cid varchar(100),\n  numb int\n);</code></pre>\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">--将分析的结果存储在这张表中\ninsert into result\nselect\n  category_id,\n  count(*) as numb\nfrom\n  product\ngroup by\n  category_id\norder by\n  numb desc;</code></pre></li>\n</ul>\n<h2 id=\"多表关系与查询\"><a href=\"#多表关系与查询\" class=\"headerlink\" title=\"多表关系与查询\"></a>多表关系与查询</h2><h3 id=\"1、多表关系\"><a href=\"#1、多表关系\" class=\"headerlink\" title=\"1、多表关系\"></a>1、多表关系</h3><ul>\n<li><p>电商数据库</p>\n<ul>\n<li>用户表<ul>\n<li>用户id、用户名称、用户手机……</li>\n</ul>\n</li>\n<li>商品表<ul>\n<li>商品id、商品名称、商品价格、库存、尺寸……</li>\n</ul>\n</li>\n<li>订单表<ul>\n<li>订单id、用户id、商品id、总金额、支付方式</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>员工数据库</p>\n<ul>\n<li>员工表<ul>\n<li>员工id、员工姓名、员工性别、年龄、部门id……</li>\n</ul>\n</li>\n<li>部门表<ul>\n<li>部门id、部门名称、部门位置、部门领导……</li>\n</ul>\n</li>\n<li>员工和部门之间的关系<ul>\n<li>员工属于某一个部门</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>表与表之间通过某些列来实现关联，表现数据之间的关系</p>\n</li>\n</ul>\n<h3 id=\"2、join\"><a href=\"#2、join\" class=\"headerlink\" title=\"2、join\"></a>2、join</h3><ul>\n<li><p>功能：通过两张表之间关联的列，实现将两张表的列进行合并</p>\n</li>\n<li><p>关键字：A    join B   on  条件</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select 查询的两张表的哪些列  from A表  join  B表  on 关联条件;</code></pre></li>\n<li><p>本质：通过某种列的关系，将两张表的列进行了关联</p>\n</li>\n<li><p>需求1：查询每个商品的名称以及所属分类的名称</p>\n<ul>\n<li><p>分析结果长什么样？</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">商品名称\t\t\t分类名称\n联想\t\t\t\t\t电脑\n……\nweiC 100\t\t\t 吃的</code></pre></li>\n<li><p>问题：商品名称 属于商品表，分类名称属于分类表</p>\n</li>\n<li><p>关系：分类id：categor_id</p>\n</li>\n<li><p>查询</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">--将商品表与分类表通过分类id进行关联，并显示两张表的所有列\nselect\n   a.*,\n   b.*\nfrom\n   product as a join category as b on a.category_id &#x3D; b.category_id;</code></pre>\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select\n  a.pname,\n  b.category_name\nfrom\n  product a join category b on a.category_id &#x3D; b.category_id;</code></pre></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>需求2：统计每个分类名称对应的商品个数</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select\n  b.category_name,\n  count(*) as numb\nfrom\n  product a join category b on a.category_id &#x3D; b.category_id\ngroup by\n  b.category_name;</code></pre></li>\n<li><p>需求3：统计除了吃的分类以外的所有分类的商品个数，并显示个数最多的前三个分类</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select \n   b.category_name,\n   count(*) as numb\nfrom \n   product a join category b on a.category_id &#x3D; b.category_id\nwhere\n   b.category_name !&#x3D; &#39;吃的&#39;\ngroup by\n   b.category_name\norder by\n   numb desc\nlimit 3;</code></pre></li>\n</ul>\n<ul>\n<li><p>分类</p>\n<ul>\n<li><p>inner join：内连接，inner可以省略</p>\n<ul>\n<li>关联条件中，两张表都有这个值，结果就有</li>\n<li>类似于集合中两个集合的交集</li>\n</ul>\n</li>\n<li><p>left outer join：左外连接，outer可以省略</p>\n<ul>\n<li><p>关联条件中，左表中有，结果就有</p>\n</li>\n<li><p>类似于集合中左表的全集</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select\n  a.pname,\n  b.category_name\nfrom\n  product a left join category b on a.category_id &#x3D; b.category_id;</code></pre>\n\n<ul>\n<li>左表是product，右表是category</li>\n<li>如果product表中有一条数据的category_id是c006，而category中没有</li>\n<li>结果有</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>right   outer join：右外连接，outer可以省略</p>\n<ul>\n<li><p>关联条件中，右表中有，结果就有</p>\n</li>\n<li><p>类似于集合中右表的全集</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select\n  a.pname,\n  b.category_name\nfrom\n  product a right join category b on a.category_id &#x3D; b.category_id;</code></pre>\n\n<ul>\n<li>左表是product，右表是category</li>\n<li>如果category表中有一条数据的category_id是c006，而product中没有</li>\n<li>结果有</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>full   join：全连接</p>\n<ul>\n<li>关联条件中，两张表任意一边有，结果就有</li>\n<li>类似于集合中的两张表全集</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3、子查询\"><a href=\"#3、子查询\" class=\"headerlink\" title=\"3、子查询\"></a>3、子查询</h3><ul>\n<li><p>功能：在select语句中嵌套select语句</p>\n</li>\n<li><p>需求1：查询化妆品这个分类对应的所有商品信息</p>\n<ul>\n<li>分析结果长什么样？<ul>\n<li>所有商品信息：product</li>\n</ul>\n</li>\n<li>条件：化妆品这个分类对应的商品<ul>\n<li>化妆品：category</li>\n</ul>\n</li>\n<li>解决：先获取化妆品对应的分类id，然后根据分类id到商品表中查询这个分类id对应的商品</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select category_id from category where category_name &#x3D; &#39;化妆品&#39;;\nselect * from product where category_id &#x3D; &#39;c003&#39;;</code></pre>\n\n<p>|</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from product where category_id &#x3D; (select category_id from category where category_name &#x3D; &#39;化妆品&#39;);</code></pre>\n\n<ul>\n<li>先执行内层的SQL语句</li>\n<li>然后执行外层的SQL语句</li>\n</ul>\n</li>\n<li><p>需求2：查询相宜本草对应的分类的名称</p>\n<ul>\n<li>结果：显示分类的 名称：category</li>\n<li>条件：相宜本草  pname：product</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">--先查询相宜本草对应的分类id\nselect category_id from product where pname &#x3D; &#39;相宜本草&#39;;\n--根据分类id到分类表中查询分类的名称\nselect category_name from category where category_id &#x3D; &#39;c003&#39;;\n|\nselect category_name from category where category_id &#x3D; (select category_id from product where pname &#x3D; &#39;相宜本草&#39;);</code></pre></li>\n<li><p>join与子查询的应用场景</p>\n<ul>\n<li>如果你的查询结果包含多张表的列<ul>\n<li>join</li>\n</ul>\n</li>\n<li>如果你的查询结果只有一张表的列，条件来自于别的表<ul>\n<li>子查询</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","feature":true,"text":"MySQL的介绍1、大数据本质 利用大数据的软件工具对大数据进行处理，从数据中挖掘价值 2、数据处理流程 数据采集：将产生各种数据进行统一化的存储 数据存储：将数据存储数据仓库中 数据处理：使用SQL开发语言开发程序对数据进行处理 数据应用：将处理好的结果进行应用 3、数据存储及...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"BI商业大数据分析平台搭建","slug":"BI商业大数据分析平台搭建","count":4,"path":"api/categories/BI商业大数据分析平台搭建.json"}],"tags":[{"name":"大数据分析","slug":"大数据分析","count":4,"path":"api/tags/大数据分析.json"},{"name":"BI平台","slug":"BI平台","count":4,"path":"api/tags/BI平台.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MySQL%E7%9A%84%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">MySQL的介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%9C%AC%E8%B4%A8\"><span class=\"toc-text\">1、大数据本质</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">2、数据处理流程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E5%8F%8A%E5%A4%84%E7%90%86\"><span class=\"toc-text\">3、数据存储及处理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">4、数据库管理系统</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5%E3%80%81MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">5、MySQL介绍及概念</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MySQL%E5%8F%8ADataGrip%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">MySQL及DataGrip部署</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81MySQL%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">1、MySQL安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81DataGrip%E7%9A%84%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2、DataGrip的安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81DataGrip%E8%BF%9E%E6%8E%A5MySQL\"><span class=\"toc-text\">3、DataGrip连接MySQL</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%85%B6%E8%A7%84%E5%88%99\"><span class=\"toc-text\">SQL介绍及其规则</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81SQL%E7%9A%84%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1、SQL的介绍</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81SQL%E7%9A%84%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">2、SQL的分类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81SQL%E7%9A%84%E8%A7%84%E5%88%99\"><span class=\"toc-text\">3、SQL的规则</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E5%88%86%E6%9E%90%E4%B9%8BDDL\"><span class=\"toc-text\">SQL分析之DDL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">1、数据库管理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">2、数据表管理</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E5%88%86%E6%9E%90%E4%B9%8BDML\"><span class=\"toc-text\">SQL分析之DML</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%A0%BC\"><span class=\"toc-text\">1、创建表格</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">2、插入数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">3、更新数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E3%80%81%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">4、删除数据</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E5%88%86%E6%9E%90%E4%B9%8BDQL\"><span class=\"toc-text\">SQL分析之DQL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%87%86%E5%A4%87%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">1、准备数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">2、基本语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">3、简单查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E3%80%81%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2%EF%BC%9Awhere\"><span class=\"toc-text\">4、条件查询：where</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5%E3%80%81%E8%81%9A%E5%90%88%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">5、聚合查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6%E3%80%81%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2%EF%BC%9Agourp-by\"><span class=\"toc-text\">6、分组查询：gourp by</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7%E3%80%81%E6%8E%92%E5%BA%8F%E6%9F%A5%E8%AF%A2%EF%BC%9Aorder-by\"><span class=\"toc-text\">7、排序查询：order by</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8%E3%80%81%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%EF%BC%9Alimit\"><span class=\"toc-text\">8、分页查询：limit</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9%E3%80%81%E7%BB%93%E6%9E%9C%E4%BF%9D%E5%AD%98\"><span class=\"toc-text\">9、结果保存</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E4%B8%8E%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">多表关系与查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">1、多表关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81join\"><span class=\"toc-text\">2、join</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">3、子查询</span></a></li></ol></li></ol>","author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curiosity chaser","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}},"mapped":true,"prev_post":{"title":"数据仓库ETL工具Kettle","uid":"ac7e03cb654bac0969d701132b47c9db","slug":"可视化ETL工具Kettle1","date":"2022-01-29T11:34:29.000Z","updated":"2022-03-09T15:01:13.264Z","comments":true,"path":"api/articles/可视化ETL工具Kettle1.json","keywords":null,"cover":"/img/Kettle1.jpg","text":"数据仓库与ETL1、数据仓库 本质：专门针对于数据存储模型 实现：MySQL、Oracle、Hive…… 应用：专门用于实现将各种各样数据进行统一化规范化的数据存储，为所有数据应用提供数据 数据分析 数据挖掘 用户画像 推荐系统 风控系统 特点 本身不产生数据 本身也不使用数据 ...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"BI商业大数据分析平台搭建","slug":"BI商业大数据分析平台搭建","count":4,"path":"api/categories/BI商业大数据分析平台搭建.json"}],"tags":[{"name":"大数据分析","slug":"大数据分析","count":4,"path":"api/tags/大数据分析.json"},{"name":"BI平台","slug":"BI平台","count":4,"path":"api/tags/BI平台.json"}],"author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curiosity chaser","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}},"feature":true},"next_post":{"title":"简介","uid":"e3b28e08d06ce54864d09189bebacd02","slug":"BI商业大数据分析平台搭建","date":"2021-12-19T15:54:39.000Z","updated":"2021-12-24T13:00:03.074Z","comments":true,"path":"api/articles/BI商业大数据分析平台搭建.json","keywords":null,"cover":"/img/简介.jpg","text":"这一分类为一个完整的项目。我要学习一步步搭建一个BI商业大数据分析平台。 数据库管理系统MySQL首先复习加强化SQL，学习使用MySQL图形化开发工具-DataGrip 可视化ETL工具Kettle学习Kettle开发，重点在于文本输入与Excel输出，Excel输入与MySQ...","link":"","photos":[],"count_time":{"symbolsCount":189,"symbolsTime":"1 mins."},"categories":[{"name":"BI商业大数据分析平台搭建","slug":"BI商业大数据分析平台搭建","count":4,"path":"api/categories/BI商业大数据分析平台搭建.json"}],"tags":[{"name":"大数据分析","slug":"大数据分析","count":4,"path":"api/tags/大数据分析.json"},{"name":"BI平台","slug":"BI平台","count":4,"path":"api/tags/BI平台.json"}],"author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curiosity chaser","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}}}}