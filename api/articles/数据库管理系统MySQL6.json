{"title":"六、SQL分析之DQL","uid":"d61d2bd2be71b29580f112a36c07b7c7","slug":"数据库管理系统MySQL6","date":"2022-01-29T11:10:35.000Z","updated":"2022-02-12T14:00:15.767Z","comments":true,"path":"api/articles/数据库管理系统MySQL6.json","keywords":null,"cover":"/img/MySQL6.jpg","content":"<h2 id=\"SQL分析之DQL\"><a href=\"#SQL分析之DQL\" class=\"headerlink\" title=\"SQL分析之DQL\"></a>SQL分析之DQL</h2><h3 id=\"1、准备数据\"><a href=\"#1、准备数据\" class=\"headerlink\" title=\"1、准备数据\"></a>1、准备数据</h3><ul>\n<li><p>创建测试数据库</p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">drop database if exists bigdata;\ncreate database bigdata;\nuse bigdata;</code></pre></li>\n<li><p>创建商品表</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create table product(\n pid int,\n pname varchar(20),\n price double,\n category_id varchar(32)\n);</code></pre></li>\n<li><p>插入商品测试数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">INSERT INTO product(pid,pname,price,category_id) VALUES(1,&#39;联想&#39;,5000,&#39;c001&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(2,&#39;海尔&#39;,3000,&#39;c001&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(3,&#39;雷神&#39;,5000,&#39;c001&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(4,&#39;杰克琼斯&#39;,800,&#39;c002&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(5,&#39;真维斯&#39;,200,&#39;c002&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(6,&#39;花花公子&#39;,440,&#39;c002&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(7,&#39;劲霸&#39;,2000,&#39;c002&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(8,&#39;香奈儿&#39;,800,&#39;c003&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(9,&#39;相宜本草&#39;,200,&#39;c003&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(10,&#39;面霸&#39;,5,&#39;c003&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(11,&#39;好想你枣&#39;,56,&#39;c004&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(12,&#39;香飘飘奶茶&#39;,1,&#39;c005&#39;);\nINSERT INTO product(pid,pname,price,category_id) VALUES(13,&#39;海澜之家&#39;,1,&#39;c002&#39;);</code></pre></li>\n<li><p>创建商品分类类：categroy</p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">create table category(\n  category_id varchar(10),\n  category_name varchar(100)\n);</code></pre></li>\n<li><p>插入商品分类测试数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">insert into category values(&#39;c001&#39;,&#39;电脑&#39;);\ninsert into category values(&#39;c002&#39;,&#39;服装&#39;);\ninsert into category values(&#39;c003&#39;,&#39;化妆品&#39;);\ninsert into category values(&#39;c004&#39;,&#39;吃的&#39;);\ninsert into category values(&#39;c005&#39;,&#39;喝的&#39;);</code></pre></li>\n</ul>\n<h3 id=\"2、基本语法\"><a href=\"#2、基本语法\" class=\"headerlink\" title=\"2、基本语法\"></a>2、基本语法</h3><ul>\n<li><p>功能：实现对于数据表中的数据的查询、统计分析、处理</p>\n</li>\n<li><p>关键字：select</p>\n</li>\n<li><p>语法</p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">select 1 from 2 where 3 group by 4 having 5 order by 6 limit 7;</code></pre>\n\n<ul>\n<li><p>1：用于决定查询的结果中有哪些列，给定哪些列，结果就会显示这些列</p>\n<ul>\n<li>写列的名字，多列用逗号隔开</li>\n<li>*号代表所有的列</li>\n</ul>\n</li>\n<li><p>2：用于表示查询哪张表，给定表的名字</p>\n</li>\n<li><p>3：条件查询，只有满足条件的数据才会被返回</p>\n<ul>\n<li>不满足条件的数据会被过滤掉，不会在结果中显示</li>\n<li>符合where条件的行才会在结果中显示</li>\n</ul>\n</li>\n<li><p>4：用于实现分组的，将多条数据按照某一列或者多列进行分组，划分到同一组中</p>\n<ul>\n<li>用于实现统计分析</li>\n<li>语法：group by col</li>\n</ul>\n</li>\n<li><p>5：用于实现分组后的条件过滤</p>\n<ul>\n<li>功能类似于where</li>\n<li>满足having后的条件就会出现在结果中</li>\n<li>不满足条件就会被过滤掉</li>\n<li>与where的区别<ul>\n<li>where：分组之前过滤</li>\n<li>having：分组之后过滤</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>6：用于实现将查询的结果按照某一列或者多列进行排序</p>\n<ul>\n<li>order by col  [ asc | desc]</li>\n<li>asc：升序排序</li>\n<li>desc：降序排序</li>\n<li>如果不指定，默认是升序排序</li>\n</ul>\n</li>\n<li><p>7：用于实现分页输出</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3、简单查询\"><a href=\"#3、简单查询\" class=\"headerlink\" title=\"3、简单查询\"></a>3、简单查询</h3><ul>\n<li><p>查询所有的商品信息</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product;</code></pre></li>\n</ul>\n<ul>\n<li><p>查询所有的商品名称和价格</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select pname,price from product;</code></pre></li>\n<li><p>查询所有的商品名称和价格，结果的列的名称分别为商品和价格</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select pname as &#39;商品&#39;, price as &#39;价格&#39; from product;</code></pre>\n\n<ul>\n<li>as：用于给列或者表取别名</li>\n</ul>\n</li>\n<li><p>查询所有商品的价格，并去掉重复价格</p>\n<ul>\n<li><p>查询所有商品价格</p>\n</li>\n<li><p>去掉重复价格</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select distinct price from product;</code></pre></li>\n<li><p>distinct：用于对列值进行去重</p>\n</li>\n</ul>\n</li>\n<li><p>将所有商品的价格+10元显示</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select price as &#39;价格&#39; , price + 10 as &#39;新价格&#39; from product;</code></pre>\n\n<ul>\n<li>直接对数值类型的列进行运算<ul>\n<li>加：+</li>\n<li>减：-</li>\n<li>乘：*</li>\n<li>除：/</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4、条件查询：where\"><a href=\"#4、条件查询：where\" class=\"headerlink\" title=\"4、条件查询：where\"></a>4、条件查询：where</h3><ul>\n<li><p>功能：对于数据行的过滤</p>\n</li>\n<li><p>查询商品名称为“花花公子”的商品所有信息 </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where pname &#x3D; &#39;花花公子&#39;;</code></pre></li>\n<li><p>查询价格为800商品  </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where price &#x3D; 800;</code></pre></li>\n<li><p>查询价格不是800的所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from  product where  price !&#x3D; 800;</code></pre></li>\n<li><p>查询商品价格大于60元的所有商品信息</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where price &gt; 60;</code></pre>\n\n<ul>\n<li><p>等于：=</p>\n</li>\n<li><p>不等于：！=</p>\n</li>\n<li><p>小于：&lt;</p>\n</li>\n<li><p>大于：&gt;</p>\n</li>\n<li><p>小于等于：&lt;=</p>\n</li>\n<li><p>大于等于：&gt;=</p>\n</li>\n</ul>\n</li>\n<li><p>查询商品价格在200到1000之间所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where price &gt;&#x3D; 200 and price &lt;&#x3D; 1000;\nselect * from product where price between 200 and 1000;</code></pre>\n\n<ul>\n<li>and：并列关系，两个条件都要满足</li>\n</ul>\n</li>\n<li><p>查询商品价格是200或800的所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where price &#x3D; 200 or price &#x3D; 800;</code></pre>\n\n<ul>\n<li>or：或者关系，两个条件满足其中一个即可</li>\n</ul>\n</li>\n<li><p>查询含有’霸’字的所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where pname like &#39;%霸%&#39;;</code></pre>\n\n<ul>\n<li>%：任意多个字符</li>\n</ul>\n</li>\n<li><p>查询以’香’开头的所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where pname like &#39;香%&#39;;</code></pre></li>\n<li><p>查询第二个字为’想’的所有商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from  product where pname like &#39;_想%&#39;;</code></pre>\n\n<ul>\n<li>_：表示一个字符</li>\n</ul>\n</li>\n<li><p>查询没有分类的商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">insert into product values(14,&#39;weiC 100&#39;,9.9,null);\n\nselect * from product where category_id is null;</code></pre></li>\n<li><p>查询有分类的商品</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product where category_id is not null;</code></pre></li>\n</ul>\n<h3 id=\"5、聚合查询\"><a href=\"#5、聚合查询\" class=\"headerlink\" title=\"5、聚合查询\"></a>5、聚合查询</h3><ul>\n<li><p>聚合函数</p>\n<ul>\n<li>函数：MySQL为你定义好的功能，你只要调用这个命令就可以实现聚合功能</li>\n<li>MYSQL默认为我们提供的常见的聚合函数<ul>\n<li>count(colname)：统计某一列的行数，统计个数，null不参与统计</li>\n<li>sum（colname）：计算某一列的所有值的和，只能对数值类型求和，如果不是数值，结果为0</li>\n<li>max（colname）：计算某一列的所有值中的最大值</li>\n<li>min（colname）：计算某一列的所有值中的最小值</li>\n<li>avg（colname）：计算某一列的平均值</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>查询商品的总条数 </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select count(pid) as &#39;总个数&#39; from product;</code></pre></li>\n<li><p>查询价格大于200商品的总条数 </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select count(pid) as &#39;大于200的商品个数&#39; from product where price &gt; 200;</code></pre></li>\n<li><p>查询分类为’c001’的所有商品价格的总和  </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select sum(price) as totalPrice from product where category_id &#x3D; &#39;c001&#39;;</code></pre></li>\n</ul>\n<ul>\n<li><p>查询分类为’c002’所有商品的平均价格 </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select avg(price) as &#39;平均价格&#39; from product where category_id &#x3D; &#39;c002&#39;;</code></pre></li>\n<li><p>查询商品的最大价格和最小价格  </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select max(price) as &#39;最大价格&#39;,min(price) as &#39;最小价格&#39; from product;</code></pre></li>\n</ul>\n<h3 id=\"6、分组查询：gourp-by\"><a href=\"#6、分组查询：gourp-by\" class=\"headerlink\" title=\"6、分组查询：gourp by\"></a>6、分组查询：gourp by</h3><ul>\n<li><p>关键字：group by col …… having</p>\n</li>\n<li><p>功能：按照某些列进行分组，对分组后的数据进行处理，一般都会搭配聚合函数使用</p>\n</li>\n<li><p>统计各个分类商品的个数  </p>\n<ul>\n<li><p>分析过程</p>\n<ul>\n<li><p>结果长什么样？</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">category_id\t\t\t个数\nc001\t\t\t\t3\nc002\t\t\t\t5\nc003\t\t\t\t3\nc004\t\t\t\t2\nc005\t\t\t\t1</code></pre></li>\n<li><p>按照什么分组？</p>\n<ul>\n<li>按照category_id进行分组</li>\n</ul>\n</li>\n<li><p>统计每组商品的个数</p>\n<ul>\n<li>count</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as &#39;个数&#39; from product group by category_id;</code></pre></li>\n<li><p>统计查询每种分类中的商品的最大价格和最小价格</p>\n<ul>\n<li>分析<ul>\n<li>结果长什么样？<ul>\n<li>三列：分类的id        最大价格            最小价格</li>\n</ul>\n</li>\n<li>按照分类的id进行分组</li>\n<li>统计每个分组内部的最大价格和最小价格</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select  \n    category_id,\n    max(price) as maxprice,\n    min(price) as minprice   \nfrom \n    product  \ngroup by \n    category_id;</code></pre></li>\n<li><p>统计各个分类商品的个数,且只显示个数大于1的数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as &#39;个数&#39; from product group by category_id;</code></pre>\n\n<ul>\n<li>需要对分组后的结果再进行行的过滤</li>\n<li>where：实现对数据行的过滤，指定条件<ul>\n<li>这个需求中不能使用where</li>\n<li>因为where会在group by之前执行，而个数是在分组之后才产生的列</li>\n</ul>\n</li>\n<li>having：实现对数据行的过滤，指定条件，写法与where一致<ul>\n<li>用于分组之后结果数据的过滤</li>\n<li>对分组以后的 结果进行过滤</li>\n</ul>\n</li>\n<li>什么时候用where，什么时候用having<ul>\n<li>你要过滤的条件是分组之前就存在的，还是分组以后才产生的</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as &#39;个数&#39; from product group by category_id having count(*) &gt; 1;</code></pre></li>\n</ul>\n<h3 id=\"7、排序查询：order-by\"><a href=\"#7、排序查询：order-by\" class=\"headerlink\" title=\"7、排序查询：order by\"></a>7、排序查询：order by</h3><ul>\n<li><p>关键字：order by col…… 【 asc | desc】</p>\n</li>\n<li><p>功能：将结果按照某些列进行升序或者 降序的排序来显示</p>\n<ul>\n<li>默认是升序</li>\n<li>asc：升序</li>\n<li>desc：降序</li>\n</ul>\n</li>\n<li></li>\n<li><p>查询所有商品的信息，并按照价格降序排序</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product order by  price desc;</code></pre></li>\n<li><p>查询所有商品的信息，并按照价格排序(降序)，如果价格相同，以分类排序(降序)</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product order by price desc,category_id desc;</code></pre></li>\n<li><p>统计各个分类商品的个数 ，并按照个数降序排序</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as &#39;个数&#39; from product group by category_id;</code></pre>\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as &#39;个数&#39; from product group by category_id order by count(*) desc;</code></pre></li>\n</ul>\n<h3 id=\"8、分页查询：limit\"><a href=\"#8、分页查询：limit\" class=\"headerlink\" title=\"8、分页查询：limit\"></a>8、分页查询：limit</h3><ul>\n<li><p>关键字：limit</p>\n</li>\n<li><p>功能：限制输出的结果</p>\n</li>\n<li><p>语法：limit M,N</p>\n<ul>\n<li>M：你想从第M+1条开始显示</li>\n<li>N：显示N条</li>\n<li>显示第一条到第三条<ul>\n<li>M：0</li>\n<li>N：3</li>\n</ul>\n</li>\n<li>显示第9条到第10条<ul>\n<li>M：8</li>\n<li>N：2</li>\n</ul>\n</li>\n<li>如果从第一条开始，M为0，可以省略不写<ul>\n<li>limit N</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>查询product表的前5条记录</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product limit 0,5;\nselect * from product limit 5;</code></pre></li>\n<li><p>查询product表的第4条和第5条记录</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from product limit 3,2;</code></pre></li>\n<li><p>查询商品个数最多的分类的前三名</p>\n<ul>\n<li><p>查询所有商品分类的商品个数</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as numb  from product group by category_id;</code></pre></li>\n<li><p>对上一步做排序</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as numb from product group by category_id order by numb desc;</code></pre></li>\n<li><p>limit选择前三名</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select category_id,count(*) as numb from product group by category_id order by numb desc limit 3;</code></pre></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9、结果保存\"><a href=\"#9、结果保存\" class=\"headerlink\" title=\"9、结果保存\"></a>9、结果保存</h3><ul>\n<li><p>语法</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">insert into 表的名称   select……</code></pre></li>\n<li><p>功能：将一条select语句运行的结果写入一张表中</p>\n</li>\n<li><p>注意：结果表的列一定要与Select语句的结果的列要匹配</p>\n<ul>\n<li>列的名称可以不一样</li>\n<li>但是列的类型和个数必须一一对应</li>\n</ul>\n</li>\n<li><p>统计各个分类商品的个数 ，并按照个数降序排序，并将结果进行保存</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select\n  category_id,\n  count(*) as numb\nfrom\n  product\ngroup by\n  category_id\norder by\n  numb desc;</code></pre>\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">--创建一张表用于存储分析的结果\ncreate table result (\n  cid varchar(100),\n  numb int\n);</code></pre>\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">--将分析的结果存储在这张表中\ninsert into result\nselect\n  category_id,\n  count(*) as numb\nfrom\n  product\ngroup by\n  category_id\norder by\n  numb desc;</code></pre></li>\n</ul>\n","text":"SQL分析之DQL1、准备数据 创建测试数据库 drop database if exists bigdata; create database bigdata; use bigdata; 创建商品表 create table product( pid int, pname va...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"BI商业大数据分析平台搭建","slug":"BI商业大数据分析平台搭建","count":11,"path":"api/categories/BI商业大数据分析平台搭建.json"}],"tags":[{"name":"大数据分析","slug":"大数据分析","count":11,"path":"api/tags/大数据分析.json"},{"name":"BI平台","slug":"BI平台","count":11,"path":"api/tags/BI平台.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E5%88%86%E6%9E%90%E4%B9%8BDQL\"><span class=\"toc-text\">SQL分析之DQL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%87%86%E5%A4%87%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">1、准备数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">2、基本语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">3、简单查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E3%80%81%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2%EF%BC%9Awhere\"><span class=\"toc-text\">4、条件查询：where</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5%E3%80%81%E8%81%9A%E5%90%88%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">5、聚合查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6%E3%80%81%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2%EF%BC%9Agourp-by\"><span class=\"toc-text\">6、分组查询：gourp by</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7%E3%80%81%E6%8E%92%E5%BA%8F%E6%9F%A5%E8%AF%A2%EF%BC%9Aorder-by\"><span class=\"toc-text\">7、排序查询：order by</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8%E3%80%81%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%EF%BC%9Alimit\"><span class=\"toc-text\">8、分页查询：limit</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9%E3%80%81%E7%BB%93%E6%9E%9C%E4%BF%9D%E5%AD%98\"><span class=\"toc-text\">9、结果保存</span></a></li></ol></li></ol>","author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curious hunter","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}},"mapped":true,"prev_post":{"title":"七、多表关系与查询","uid":"4769b9d006bbb144a5d2804ce160cbfc","slug":"数据库管理系统MySQL7","date":"2022-01-29T11:27:15.000Z","updated":"2022-02-12T14:00:16.571Z","comments":true,"path":"api/articles/数据库管理系统MySQL7.json","keywords":null,"cover":"/img/MySQL7.jpg","text":"多表关系与查询1、多表关系 电商数据库 用户表 用户id、用户名称、用户手机…… 商品表 商品id、商品名称、商品价格、库存、尺寸…… 订单表 订单id、用户id、商品id、总金额、支付方式 员工数据库 员工表 员工id、员工姓名、员工性别、年龄、部门id…… 部门表 部门id、...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"BI商业大数据分析平台搭建","slug":"BI商业大数据分析平台搭建","count":11,"path":"api/categories/BI商业大数据分析平台搭建.json"}],"tags":[{"name":"大数据分析","slug":"大数据分析","count":11,"path":"api/tags/大数据分析.json"},{"name":"BI平台","slug":"BI平台","count":11,"path":"api/tags/BI平台.json"}],"author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curious hunter","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}}},"next_post":{"title":"五、SQL分析之DML","uid":"37046ef9c80ec9f9f61aaf87f228372b","slug":"数据库管理系统MySQL5","date":"2022-01-29T11:01:26.000Z","updated":"2022-02-12T14:00:15.779Z","comments":true,"path":"api/articles/数据库管理系统MySQL5.json","keywords":null,"cover":"/img/MySQL5.jpg","text":"SQL分析之DML1、创建表格 创建一个商品的分类表：category 分类编号：cid 分类名称：cname 创建语句 create table category( cid varchar(5), cname varchar(10) ); 2、插入数据 功能：写入一条数据进入数...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"BI商业大数据分析平台搭建","slug":"BI商业大数据分析平台搭建","count":11,"path":"api/categories/BI商业大数据分析平台搭建.json"}],"tags":[{"name":"大数据分析","slug":"大数据分析","count":11,"path":"api/tags/大数据分析.json"},{"name":"BI平台","slug":"BI平台","count":11,"path":"api/tags/BI平台.json"}],"author":{"name":"Quanito","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"A little curious hunter","socials":{"github":"https://github.com/1250681923","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"GoogleMail":{"icon":"/img/googlemail.png","link":"mailto:code.quan666zhang@gmail.com"}}}}}}